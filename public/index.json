[{"content":"","permalink":"http://localhost:1313/posts/kafka/","summary":"","title":"Kafka"},{"content":"\u0026ndash;\n","permalink":"http://localhost:1313/posts/annotations/","summary":"\u003cp\u003e\u0026ndash;\u003c/p\u003e","title":"Annotations"},{"content":"Thinking in Compose declarative API that allows you to render your app UI without imperatively mutating frontend views\nManipulating views manually increases the likelihood of errors\nManaging State Composition: a description of the UI built by Jetpack Compose when it executes composables.\nInitial composition: creation of a Composition by running composables the first time.\nRecomposition: re-running composables to update the Composition when data changes.\nA value computed by remember is stored in the Composition during initial composition, and the stored value is returned during recomposition.\nWhile remember helps you retain state across recompositions, the state is NOT retained across configuration changes.\nMutable objects that are not observable, such as ArrayList or a mutable data class, are not observable by Compose and don\u0026rsquo;t trigger a recomposition when they change.\nBefore reading another observable type in Compose, you must convert it to a State so that composables can automatically recompose when the state changes.\nNavigation in compose NavHost navController Navigation Graph ","permalink":"http://localhost:1313/posts/compose/","summary":"\u003ch2 id=\"thinking-in-compose\"\u003eThinking in Compose\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003edeclarative API that allows you to render your app UI without imperatively mutating frontend views\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManipulating views manually increases the likelihood of errors\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"managing-state\"\u003eManaging State\u003c/h2\u003e\n\u003cp\u003eComposition: a description of the UI built by Jetpack Compose when it executes composables.\u003c/p\u003e\n\u003cp\u003eInitial composition: creation of a Composition by running composables the first time.\u003c/p\u003e\n\u003cp\u003eRecomposition: re-running composables to update the Composition when data changes.\u003c/p\u003e\n\u003cp\u003eA value computed by \u003cstrong\u003eremember\u003c/strong\u003e is stored in the Composition during initial composition, and the stored value is returned during recomposition.\u003c/p\u003e","title":"Compose"},{"content":"linux list all users cut -d: -f1 /etc/passwd switch to postgres user switching to postgres user as this user has some extended privileges may be in order to prevent random users changing properties\nsudo -i -u postgres launch psql Now in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\npostgres@user-B760M:~$ psql List all DB \\l Connect to DB # switch to mydb \\c mydb # directly psql -d db_name # from an external url psql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb List Tables \\dt About Tables \\d table_name Get applications having connection with DB # why ? we can\u0026#39;t drop db if there is a connection SELECT application_name FROM pg_stat_activity WHERE datname =\u0026#39;db_name\u0026#39;; ","permalink":"http://localhost:1313/posts/postgres/","summary":"\u003ch3 id=\"linux-list-all-users\"\u003elinux list all users\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecut -d: -f1 /etc/passwd \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"switch-to-postgres-user\"\u003eswitch to \u003cstrong\u003epostgres\u003c/strong\u003e user\u003c/h3\u003e\n\u003cp\u003eswitching to postgres user as this user has some extended privileges\nmay be in order to prevent random users changing properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo -i -u postgres\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"launch-psql\"\u003elaunch psql\u003c/h3\u003e\n\u003cp\u003eNow in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epostgres@user-B760M:~$ psql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"list-all-db\"\u003eList all DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\l\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"connect-to-db\"\u003eConnect to DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# switch to mydb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\c\u003c/span\u003e mydb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# directly\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql -d db_name\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# from an external url \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"list-tables\"\u003eList Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003et\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"about-tables\"\u003eAbout Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003e table_name\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"get-applications-having-connection-with-db\"\u003eGet applications having connection with DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# why ? we can\u0026#39;t drop db if there is a connection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELECT application_name FROM pg_stat_activity WHERE datname \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;db_name\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Postgres"},{"content":"updateMilli concept TextClock widget\n","permalink":"http://localhost:1313/posts/appwidgets/","summary":"\u003cp\u003eupdateMilli concept\nTextClock widget\u003c/p\u003e","title":"AppWidgets"},{"content":"What they are for ? write asynchronous or blocking code in such a fashion that it looks similar to unblocking code\nSome other options Threads\nThread creation is expensive Threads\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of threads 3 thread { 4 Thread.sleep(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Coroutines\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of coroutines 3 launch { 4 delay(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Callback style code RxJava Kotlin DSL Domain specific language\nKotlin is a statically typed language (type of a variable is known at compile time)\nKotlin functions are first-class, which means they can be stored in variables and data structures, and can be passed as arguments to and returned from other higher-order functions\nFunction Types -\u0026gt; Kotlin uses this to represent functions\nFunction literals are functions that are not declared but are passed immediately as an expression\nLambda expressions and anonymous functions are function literals.\nreceiver type, which refers to the type being extended\nFunction types can optionally have an additional receiver type, which is specified before the dot in the notation: the type A.(B) -\u0026gt; C represents functions that can be called on a receiver object A with a parameter B and return a value C (also called as \u0026ldquo;function types with reciever\u0026rdquo;)\nInside the body of the function literal, the receiver object passed to a call becomes an implicit this, so that you can access the members of that receiver object without any additional qualifiers, or access the receiver object using a this expression.\nSuspend functions When they are suspended, they return a Continuation suspend functions can only be called from inside coroutines or another suspending function suspend functions have the power to suspend the coroutines suspend functions are actually state machines with suspension points as states Who will store these states ? Continuation\n1/** 2 * Interface representing a continuation after a suspension point that returns a value of type `T`. 3 */ 4@SinceKotlin(\u0026#34;1.3\u0026#34;) 5public interface Continuation\u0026lt;in T\u0026gt; { 6 /** 7 * The context of the coroutine that corresponds to this continuation. 8 */ 9 public val context: CoroutineContext 10 11 /** 12 * Resumes the execution of the corresponding coroutine passing a successful or failed [result] as the 13 * return value of the last suspension point. 14 */ 15 public fun resumeWith(result: Result\u0026lt;T\u0026gt;) 16} When function a calls function b, the virtual machine needs to store the state of a somewhere, as well as the address where execution should return once b is finished. All this is stored in a structure called call stack\nCoroutine context , CoroutineScope , Shared Mutable state Coroutine Builder coroutine builder, a bridge from the normal to the suspending world launch and async are extension functions on CoroutineScope.\nlaunch\nstart a coroutine, and it will run independently runBlocking\nrunBlocking is a very atypical builder. It blocks the thread it has been started on whenever its coroutine is suspended async\nsimilar to launch, but it is designed to produce a value Coroutine scope To create a scope out of a suspending function, we use the coroutineScope function. 1public interface CoroutineScope { 2 /** 3 * The context of this scope. 4 * Context is encapsulated by the scope and used for implementation of coroutine builders that are extensions on the scope. 5 * Accessing this property in general code is not recommended for any purposes except accessing the [Job] instance for advanced usages. 6 * 7 * By convention, should contain an instance of a [job][Job] to enforce structured concurrency. 8 */ 9 public val coroutineContext: CoroutineContext 10} Structured concurrency A parent provides a scope for its children, and they are called in this scope. This builds a relationship that is called a structured concurrency. Here are the most important effects of the parent-child relationship:\nchildren inherit context from their parent (but they can also overwrite it, as will be explained in the Coroutine context chapter); a parent suspends until all the children are finished (this will be explained in the Job and children awaiting chapter); when the parent is cancelled, its child coroutines are cancelled too (this will be explained in the Cancellation chapter); when a child raises an error, it destroys the parent as well (this will be explained in the Exception handling chapter). Coroutine Context 1public interface CoroutineContext { 2 /** 3 * Returns the element with the given [key] from this context or `null`. 4 */ 5 public operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? 6 7 /** 8 * Accumulates entries of this context starting with [initial] value and applying [operation] 9 * from left to right to current accumulator value and each element of this context. 10 */ 11 public fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R 12 13 /** 14 * Returns a context containing elements from this context and elements from other [context]. 15 * The elements from this context with the same key as in the other one are dropped. 16 */ 17 public operator fun plus(context: CoroutineContext): CoroutineContext = 18 if (context === EmptyCoroutineContext) this else // fast path -- avoid lambda creation 19 context.fold(this) { acc, element -\u0026gt; 20 val removed = acc.minusKey(element.key) 21 if (removed === EmptyCoroutineContext) element else { 22 // make sure interceptor is always last in the context (and thus is fast to get when present) 23 val interceptor = removed[ContinuationInterceptor] 24 if (interceptor == null) CombinedContext(removed, element) else { 25 val left = removed.minusKey(ContinuationInterceptor) 26 if (left === EmptyCoroutineContext) CombinedContext(element, interceptor) else 27 CombinedContext(CombinedContext(left, element), interceptor) 28 } 29 } 30 } 31 32 /** 33 * Returns a context containing elements from this context, but without an element with 34 * the specified [key]. 35 */ 36 public fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext 37 38 /** 39 * Key for the elements of [CoroutineContext]. [E] is a type of element with this key. 40 */ 41 public interface Key\u0026lt;E : Element\u0026gt; 42 43 /** 44 * An element of the [CoroutineContext]. An element of the coroutine context is a singleton context by itself. 45 */ 46 public interface Element : CoroutineContext { 47 /** 48 * A key of this coroutine context element. 49 */ 50 public val key: Key\u0026lt;*\u0026gt; 51 52 public override operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? = 53 @Suppress(\u0026#34;UNCHECKED_CAST\u0026#34;) 54 if (this.key == key) this as E else null 55 56 public override fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R = 57 operation(initial, this) 58 59 public override fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext = 60 if (this.key == key) EmptyCoroutineContext else this 61 } 62} operations -\u0026gt;plus, minus\nJob context a job represents a cancellable thing with a lifecycle each coroutine has its own job provider structured concurrency points 2,3,4 To check the state in code, we use the properties isActive, isCompleted, and isCancelled. Job is a coroutine context, we can access it using coroutineContext[Job]. When a coroutine has its own (independent) job, it has nearly no relation to its parent. It only inherits other contexts, but other results of the parent-child relationship will not apply. This causes us to lose structured concurrency, which is a problematic situation that should be avoided join method \u0026gt; This is a suspending function that suspends until a concrete job reaches a final state (either Completed or Cancelled). 1public interface Job : CoroutineContext.Element { } Jobs states\nState isActive isCompleted isCancelled New (optional initial state) false false false Active (default initial state) true false false Completing (transient state) true false false Cancelling (transient state) false false true Cancelled (final state) false true true Completed (final state) false true false Cancellation cancellation is co-operative once a job is cancelled it cannot acts as a parent for any new coroutines ends the job at the first suspension point if job has children they are also cancelled Freeing up resources after cancellation\n1.\n1 2job.invokeOnCompletion { exception: Throwable? -\u0026gt; 3 println(\u0026#34;Finished\u0026#34;) 4 } 1finally { 2 println(\u0026#34;Finally\u0026#34;) 3 withContext(NonCancellable) { 4 delay(1000L) 5 println(\u0026#34;Cleanup done\u0026#34;) 6 } 7 } Q: How to do suspending tasks after cancellation ?\nIdeally after cancellation we can\u0026rsquo;t launch new coroutines\n1finally { 2 withContext(NonCancellable) { 3 println(\u0026#34;job: I\u0026#39;m running finally\u0026#34;) 4 delay(1000L) 5 println(\u0026#34;job: And I\u0026#39;ve just delayed for 1 sec because I\u0026#39;m non-cancellable\u0026#34;) 6 } 7 } Exception Handling Scope functions coroutineScope 1suspend fun getUserName() { 2 delay(1000) 3 println(\u0026#34;User: suyash\u0026#34;) 4} 5 6suspend fun getUserData() { 7 delay(1000) 8 println(\u0026#34;location, hobbies\u0026#34;) 9} 10 11 12suspend fun main() = coroutineScope { 13 printTime(\u0026#34;begin\u0026#34;) 14 val userName = async { getUserName() } 15 val userData = async { getUserData() } 16 printTime(\u0026#34;end ${userName.await()} ${userData.await()}\u0026#34;) 17 18} Dispatchers Main - the default one\nIO - when we block threads with I/O operations limit- 64 by default\nDefault - limit of 20 for mine\nlimitedParallelism used on Dispatchers.Default makes a dispatcher with an additional limit. Using limitedParallelism on Dispatcher.IO makes a dispatcher independent of Dispatcher.IO. However, they all share the same infinite pool of threads. Q: Dispatcher limited to a single thread ? Solves the shared state problems\nShared state problems Constructing a coroutine scope Channel why ? Share Information b/w coroutines\nChannel supports any number of senders and receivers, and every value that is sent to a channel is received only once.\nHot data streams are eager, produce elements independently of their consumption, and store the elements. Cold data streams are lazy, perform their operations on-demand, and store nothing.\nFlow References [1]\n","permalink":"http://localhost:1313/posts/coroutines/","summary":"\u003ch3 id=\"what-they-are-for-\"\u003eWhat they are for ?\u003c/h3\u003e\n\u003cp\u003ewrite asynchronous or blocking code in such a fashion that it looks similar to unblocking code\u003c/p\u003e\n\u003ch3 id=\"some-other-options\"\u003eSome other options\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThreads\u003cbr\u003e\nThread creation is expensive\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThreads\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() = runBlocking {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    repeat(\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e_000) { \u003cspan style=\"color:#75715e\"\u003e// launch a lot of threads\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        thread {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eThread\u003c/span\u003e.sleep(\u003cspan style=\"color:#ae81ff\"\u003e5000L\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            println(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCoroutines\u003c/p\u003e","title":"Coroutines"},{"content":"How ViewModels are retained on Config Changes?\nBasic Terms ViewModelProvider ViewModelStore storage for viewmodel\nViewModelStoreOwner interface which contains storage object and is implemented by ComponentActivity etc.\nAttaching ViewModel to activity MainActivity.kt\n1class MainActivity : AppCompatActivity() { 2 @RequiresApi(Build.VERSION_CODES.P) 3 private lateinit var viewModel: MyViewModel; 4 5 @RequiresApi(Build.VERSION_CODES.P) 6 override fun onCreate(savedInstanceState: Bundle?) { 7 super.onCreate(savedInstanceState) 8 enableEdgeToEdge() 9 setContentView(R.layout.activity_main) 10 11 viewModel = ViewModelProvider(this)[MyViewModel::class.java] 12 13 } 14}![alt text](image.png) Q: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\nNo\nLet me walk you through code See how ViewModelStore is returned on from NonConfigurationInstance if not we create a new instance\n","permalink":"http://localhost:1313/posts/viewmodel/","summary":"\u003cp\u003eHow ViewModels are retained on Config Changes?\u003c/p\u003e\n\u003ch3 id=\"basic-terms\"\u003eBasic Terms\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelProvider\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStore\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003estorage for viewmodel\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-2.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStoreOwner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003einterface which contains storage object and is implemented by ComponentActivity etc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-5.png\"\u003e\n\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-6.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"attaching-viewmodel-to-activity\"\u003eAttaching ViewModel to activity\u003c/h3\u003e\n\u003cp\u003eMainActivity.kt\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainActivity\u003c/span\u003e : AppCompatActivity() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elateinit\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e viewModel: MyViewModel;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonCreate\u003c/span\u003e(savedInstanceState: Bundle?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e.onCreate(savedInstanceState)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        enableEdgeToEdge()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        setContentView(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.layout.activity_main)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        viewModel = ViewModelProvider(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)[MyViewModel\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e.java]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e}![alt text](image.png)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eQ: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\u003c/strong\u003e\u003cbr\u003e\nNo\u003c/p\u003e","title":"Viewmodel"},{"content":"Q: What is a NAS ?\nNetwork Atttached Storage\nQ: Network means ?\ncan be the whole Internet or your home network\nDIY Approach 1 Connecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\nCons Very low speed USB 2.0 has max speed of 480mbps limited storage no RAID(Redundant array of Inexpensive/Independent disks) DIY Approach 2 Raspberry PI with a HDD\nDIY Approach 3 OS choice\nTrueNAS ProxMox Ubuntu Server + casaos ","permalink":"http://localhost:1313/posts/nas/","summary":"\u003cp\u003e\u003cstrong\u003eQ: What is a NAS ?\u003c/strong\u003e\u003cbr\u003e\nNetwork Atttached Storage\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eQ: Network means ?\u003c/strong\u003e\u003cbr\u003e\ncan be the whole Internet or your home network\u003c/p\u003e\n\u003ch2 id=\"diy-approach-1\"\u003eDIY Approach 1\u003c/h2\u003e\n\u003cp\u003eConnecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCons\n\u003cul\u003e\n\u003cli\u003eVery low speed USB 2.0 has max speed of 480mbps\u003c/li\u003e\n\u003cli\u003elimited storage\u003c/li\u003e\n\u003cli\u003eno RAID(Redundant array of Inexpensive/Independent disks)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"diy-approach-2\"\u003eDIY Approach 2\u003c/h2\u003e\n\u003cp\u003eRaspberry PI  with a HDD\u003c/p\u003e\n\u003ch2 id=\"diy-approach-3\"\u003eDIY Approach 3\u003c/h2\u003e\n\u003cp\u003eOS choice\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTrueNAS\u003c/li\u003e\n\u003cli\u003eProxMox\u003c/li\u003e\n\u003cli\u003eUbuntu Server + casaos\u003c/li\u003e\n\u003c/ul\u003e","title":"DIY NAS or Home Server"},{"content":"Main App\nDefine Reciever 1class MyReciever : BroadcastReceiver() { 2 override fun onReceive(context: Context?, intent: Intent?) { 3 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Broadcast recieved\u0026#34;); 4 intent?.let { 5 val data = it.getIntExtra(\u0026#34;myVal\u0026#34;, 0) 6 val data2 = it.getStringExtra(\u0026#34;asdf\u0026#34;) 7 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;extraData = $data $data2 ${it.extras}\u0026#34;); 8 } 9 } 10} Register Reciever 1// Register 2ContextCompat.registerReceiver( 3 this, 4 myReciever, 5 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 6 ContextCompat.RECEIVER_EXPORTED 7) Unregister Reciever 1// Unregister 2this.unregisterReceiver(myReciever); In a secondary App\nFire Intent 1val button = findViewById\u0026lt;Button\u0026gt;(R.id.broadcast_button) 2button.setOnClickListener { 3 val intentToBeFired = Intent(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;) 4 val str: String = \u0026#34;MeaningFull Data\u0026#34; 5 intentToBeFired.putExtra(\u0026#34;your_string\u0026#34;, str) 6 intentToBeFired.putExtra(\u0026#34;your_int\u0026#34;,7); 7 sendBroadcast(intentToBeFired) 8} Discussion Points Q: How to protect any other app to handle a broadcast that my App has sent ?\nSend Broadcast with permission , any other app which wanted to recieve should also have that permission declared in manifest\nMain App\n1// Define permission and use it 2\u0026lt;permission 3 android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 4\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 5 6// Register reciever using permission 7registerReceiver( 8 myReciever, 9 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 10 \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;, 11 null, 12 RECEIVER_EXPORTED 13 ) secondary App\n1// Declare permission to be used 2\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 3 4// send Broadcast with that permission 5sendBroadcast(intentToBeFired, \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;) ","permalink":"http://localhost:1313/posts/broadcasting/","summary":"\u003cp\u003eMain App\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefine Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyReciever\u003c/span\u003e : BroadcastReceiver() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonReceive\u003c/span\u003e(context: Context?, intent: Intent?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Broadcast recieved\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e        intent\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getIntExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;myVal\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data2 = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getStringExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;asdf\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;extraData = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data2\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${it.extras}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eRegister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Register\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.registerReceiver(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    myReciever,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    IntentFilter(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.RECEIVER_EXPORTED\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUnregister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Unregister\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.unregisterReceiver(myReciever);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cp\u003eIn a secondary App\u003c/p\u003e","title":"BroadCasting"},{"content":"Why or UseCases? For your application you need to connect to a download service which is responsible for downloading the files and on complete inform you about the completion\nSteps Setting up AIDL Interfaces for IPC Setting Up service Implement Binder by implementing registerCallback and unregister callback Use RemoteCallbackList to maintain a list of - connections to our service sending Important updates to client by invoking callback Setting Up Client Important Permission for Accessing Service Setting up callback and define actions to perform setting up connection object and registering callback Setting Up AIDL Folder with files 1interface IMyAidlInterface { 2 int getPid(); 3 void registerCallback(IRemoteServiceCallback cb); 4 void unregisterCallback(IRemoteServiceCallback cb); 5} 6 7interface IRemoteServiceCallback { 8 void valueChanged(int newValue); 9} App Manifest (Service) 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Main Service 1class MyService : Service() { 2 3 val callbackList = RemoteCallbackList\u0026lt;IRemoteServiceCallback\u0026gt;() 4 // RemoteCallbackList maintains a list of active connections to clients 5 6 override fun onCreate() { 7 super.onCreate() 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Creating Service\u0026#34;) 9 } 10 11 private fun updateObservers() { 12 val n = callbackList.beginBroadcast() 13 for (i in 0 until n) { 14 try { 15 callbackList.getBroadcastItem(i).valueChanged(i); 16 } catch (e: RemoteException) { 17 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Remote exception occurs on sending messages\u0026#34;) 18 } 19 } 20 } 21 22 override fun onBind(intent: Intent?): IBinder? { 23 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Binding ... \u0026#34;); 24 return binder 25 } 26 27 override fun onUnbind(intent: Intent?): Boolean { 28 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;UnBinding ... \u0026#34;); 29 return super.onUnbind(intent) 30 } 31 32 override fun onDestroy() { 33 super.onDestroy() 34 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;onDestroy... \u0026#34;); 35 updateObservers() 36 callbackList.kill() 37 } 38 39 private val binder = object : IMyAidlInterface.Stub() { 40 override fun getPid(): Int { 41 updateObservers() 42 return Process.myPid() 43 } 44 45 override fun registerCallback(cb: IRemoteServiceCallback) { 46 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;registering Callback\u0026#34;) 47 callbackList.register(cb) 48 } 49 50 override fun unregisterCallback(cb: IRemoteServiceCallback?) { 51 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;unregister Callback\u0026#34;) 52 callbackList.unregister(cb) 53 } 54 } 55 56} App Manifest (Client) 1\u0026lt;queries\u0026gt; 2 \u0026lt;package android:name=\u0026#34;com.example.contexttheme\u0026#34; /\u0026gt; 3\u0026lt;/queries\u0026gt; In order to explicitly fire an intent when binding Connecting to Service (Client) 1val intent = Intent(action) 2intent.setPackage(\u0026#34;com.example.contexttheme\u0026#34;); 3this.bindService(intent, mConnection, Context.BIND_AUTO_CREATE) Connection Object (Client) 1 val action = \u0026#34;com.example.contexttheme.service\u0026#34;; 2 private val mConnection = object : ServiceConnection { 3 4 // Called when the connection with the service is established. 5 override fun onServiceConnected(className: ComponentName, service: IBinder) { 6 myservice = IMyAidlInterface.Stub.asInterface(service) 7 myservice?.registerCallback(mCallback) 8 bound = true 9 } 10 11 // Called when the connection with the service disconnects unexpectedly. 12 override fun onServiceDisconnected(className: ComponentName) { 13 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Service has unexpectedly disconnected\u0026#34;) 14 myservice = null 15 bound = false 16 } 17 } 18 19 Callback (Client) 1private val mCallback: IRemoteServiceCallback = object : IRemoteServiceCallback.Stub() { 2 override fun valueChanged(newValue: Int) { 3 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;value has been changed\u0026#34;) 4 } 5} ","permalink":"http://localhost:1313/posts/bound-service-aidl/","summary":"\u003ch4 id=\"why-or-usecases\"\u003eWhy or UseCases?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFor your application you need to connect to a download service which is responsible\nfor downloading the files and on complete inform you about the completion\u003c/p\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003eSteps\u003c/summary\u003e\n  \u003cul\u003e\n\u003cli\u003e\u003ca href=\"#setting-up-AIDL-folder-with-files\"\u003e\u003cstrong\u003eSetting up AIDL Interfaces for IPC\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up service\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#main-service\"\u003eImplement Binder by implementing registerCallback and unregister callback\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eUse RemoteCallbackList to maintain a list of - connections to our service\u003c/li\u003e\n\u003cli\u003esending Important updates to client by invoking callback\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up Client\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#app-manifest-client\"\u003eImportant Permission for Accessing Service\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#callback-client\"\u003eSetting up callback and define actions to perform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#connection-object-client\"\u003esetting up connection object and registering callback\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\n\u003ch4 id=\"setting-up-aidl-folder-with-files\"\u003eSetting Up AIDL Folder with files\u003c/h4\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/image.png\"\u003e\u003c/p\u003e","title":"Bound Service AIDL"},{"content":"Why ? Assume having an App with some functions that can be customized by the user The App already has some, but users want more :| This is a very very basic example on how that can be done\nIdea 1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN ) 2. Use PackageManager to get the Apps with custom action 3. Finally Using ClassLoaders to get classess and invoking methods on them to get results Getting Plugins with required action 1val pm = this.packageManager 2val list = pm.queryIntentServices(Intent(\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;), 0) 3val textViewIds = arrayOf(R.id.plugin_text1, R.id.plugin_text2) 4Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;size = ${list.size}\u0026#34;); 5 6for (i in list.indices) { 7 try { 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;li serviceInfo = \u0026#34; + list[i].serviceInfo.name); 9 val appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, 0) 10 val apkPath = appInfo.sourceDir 11 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;path = ${apkPath}\u0026#34;) 12 val dir = getDir(\u0026#34;dex_opt\u0026#34;, Context.MODE_PRIVATE) 13 val classLoader = PathClassLoader(apkPath, javaClass.classLoader) 14 15 val pluginClass = 16 classLoader.loadClass(\u0026#34;com.example.plugin${i}.PluginTextProvider\u0026#34;) 17 val pluginInstance = pluginClass.newInstance() 18 19 val textMethod = pluginClass.getMethod(\u0026#34;getText\u0026#34;) 20 val text: String = textMethod.invoke(pluginInstance).toString() 21 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;text for = ${text}\u0026#34;) 22 val textView: TextView = findViewById(textViewIds[i]) 23 textView.text = text 24 } catch (e: Exception) { 25 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Print exception ${e.message}\u0026#34;) 26 e.printStackTrace() 27 } 28} Main App Manifest 1\u0026lt;queries\u0026gt; 2 \u0026lt;intent\u0026gt; 3 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34; /\u0026gt; 4 \u0026lt;/intent\u0026gt; 5\u0026lt;/queries\u0026gt; Plugin App Manifest 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Custom classes implemented in Plugin APKs 1// Plugin2 Apk 2class PluginTextProvider { 3 public fun getText() = \u0026#34;Hello from plugin2\u0026#34; 4} 5 6// Plugin1 Apk 7class PluginTextProvider { 8 public fun getText() = \u0026#34;Hello from plugin1\u0026#34; 9} ","permalink":"http://localhost:1313/posts/plugin-example/","summary":"\u003ch4 id=\"why-\"\u003eWhy ?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAssume having an App with some functions that can be customized by the user\nThe App already has some, but users want \u003cstrong\u003emore\u003c/strong\u003e :|\nThis is a very very basic example on how that can be done\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"idea\"\u003eIdea\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN )\n2. Use PackageManager to get the Apps with custom action\n3. Finally Using ClassLoaders to get classess and invoking methods on them to get results\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"getting-plugins-with-required-action\"\u003eGetting Plugins with required action\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pm = \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.packageManager\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e list = pm.queryIntentServices(Intent(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textViewIds = arrayOf(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text1, \u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;size = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${list.size}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (i \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e list.indices) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;li serviceInfo = \u0026#34;\u003c/span\u003e + list[i].serviceInfo.name);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e apkPath = appInfo.sourceDir\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;path  = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${apkPath}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e dir = getDir(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;dex_opt\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eContext\u003c/span\u003e.MODE_PRIVATE)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e classLoader = PathClassLoader(apkPath, javaClass.classLoader)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e15\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginClass =\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e16\u003c/span\u003e\u003cspan\u003e            classLoader.loadClass(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.plugin\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${i}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e.PluginTextProvider\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e17\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginInstance = pluginClass.newInstance()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e18\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e19\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textMethod = pluginClass.getMethod(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;getText\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e20\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e text: String = textMethod.invoke(pluginInstance).toString()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e21\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;text for = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${text}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e22\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textView: TextView = findViewById(textViewIds[i])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e23\u003c/span\u003e\u003cspan\u003e        textView.text = text\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e24\u003c/span\u003e\u003cspan\u003e    } \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (e: Exception) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e25\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Print exception  \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${e.message}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e26\u003c/span\u003e\u003cspan\u003e        e.printStackTrace()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e27\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e28\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"main-app-manifest\"\u003eMain App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u0026lt;intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e        \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u0026lt;/intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\u0026lt;/queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"plugin-app-manifest\"\u003ePlugin App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.MyService\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    android:exported=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e        \u0026lt;intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e\u0026gt;\u0026lt;/action\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        \u0026lt;/intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u0026lt;/service\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"custom-classes-implemented-in-plugin-apks\"\u003eCustom classes implemented in Plugin APKs\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin2 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin1 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Android Plugin App Example"},{"content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH3 unordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 sub-item-5 sub-item-6 ordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 Header4 Table Header-1 Table Header-2 Table Header-3 Table Data-1 Table Data-2 Table Data-3 TD-4 Td-5 TD-6 Table Data-7 Table Data-8 Table Data-9 Header5 You may also want some images right in here like - you can do that but I would recommend you to use the component \u0026ldquo;image\u0026rdquo; and simply split your text.\nHeader6 Let us do some links - this for example: https://github.com/MinhasKamal/github-markdown-syntax is NOT a link but this: is GitHub\n","permalink":"http://localhost:1313/posts/loremipsum/","summary":"\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat. \u003cem\u003e\u003cstrong\u003eDuis aute irure dolor\u003c/strong\u003e\u003c/em\u003e in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. \u003cdel\u003eExcepteur sint occaecat\u003c/del\u003e cupidatat non\nproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\u003c/p\u003e\n\u003ch2 id=\"h2\"\u003eH2\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat.\u003c/p\u003e","title":"LoremIpsum"},{"content":"This is my personal website. I use this to document my learnings and same time sharing this with others.\n🖥️ PC Configuration - Processor: Intel i5 13500 - RAM: 16GB DDR4 - Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD - GPU: Intel® UHD Graphics 770 - Case: Lian Li Lancool 205M - OS: Windows 11 Pro / Ubuntu 22.04.5 LTS ","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eThis is my personal website.\nI use this to document my learnings and same time sharing this with others.\u003c/p\u003e\n\u003ch3 id=\"-pc-configuration\"\u003e🖥️ PC Configuration\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- Processor: Intel i5 13500  \n- RAM: 16GB DDR4  \n- Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD  \n- GPU:  Intel® UHD Graphics 770  \n- Case: Lian Li Lancool 205M  \n- OS: Windows 11 Pro / Ubuntu 22.04.5 LTS\n\u003c/code\u003e\u003c/pre\u003e","title":"About"},{"content":"Define a Custom component 1@CustomScope // Component specific scope 2@DefineComponent(parent = SingletonComponent::class) // component should be direct or indirect child of SingletonComponent 3interface CustomComponent { 4 5 @DefineComponent.Builder 6 interface Builder { 7 fun build(): CustomComponent 8 } 9} Build Custom Component 1class CustomComponentManager @Inject constructor( 2 private val customComponentProvider: Provider\u0026lt;CustomComponent.Builder\u0026gt; 3){ 4 var customComponent = customComponentProvider.get().build() 5 6} ","permalink":"http://localhost:1313/posts/firstpost/","summary":"\u003ch4 id=\"define--a--custom-component\"\u003eDefine  a  Custom component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@CustomScope\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e// Component specific scope\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e(parent = SingletonComponent\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e) \u003cspan style=\"color:#75715e\"\u003e// component should be direct or indirect child of SingletonComponent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e.Builder\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBuilder\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebuild\u003c/span\u003e(): CustomComponent\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"build-custom-component\"\u003eBuild Custom Component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponentManager\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e@Inject\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003econstructor\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e customComponentProvider: Provider\u0026lt;\u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e.Builder\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e customComponent = customComponentProvider.\u003cspan style=\"color:#66d9ef\"\u003eget\u003c/span\u003e().build()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Hilt Snippets"},{"content":"Technical The Accidental CTO by Subhash Choudhary Competitive Programming Book by Antti Laaksonen Head First Design Pattern by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra Kotlin Coroutines by Marcin Moskala Non Technical Atomic Habits by James Clear ","permalink":"http://localhost:1313/bookshelf/","summary":"\u003ch2 id=\"technical\"\u003eTechnical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/subhashchy/The-Accidental-CTO\"\u003e\u003cstrong\u003eThe Accidental CTO\u003c/strong\u003e\u003c/a\u003e by Subhash Choudhary\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cses.fi/book/book.pdf\"\u003e\u003cstrong\u003eCompetitive Programming Book\u003c/strong\u003e\u003c/a\u003e by Antti Laaksonen\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHead First Design Pattern\u003c/strong\u003e by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKotlin Coroutines\u003c/strong\u003e by Marcin Moskala\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"non-technical\"\u003eNon Technical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAtomic Habits\u003c/strong\u003e by James Clear\u003c/li\u003e\n\u003c/ul\u003e","title":"Bookshelf"},{"content":"","permalink":"http://localhost:1313/posts/kafka/","summary":"","title":"Kafka"},{"content":"\u0026ndash;\n","permalink":"http://localhost:1313/posts/annotations/","summary":"\u003cp\u003e\u0026ndash;\u003c/p\u003e","title":"Annotations"},{"content":"Thinking in Compose declarative API that allows you to render your app UI without imperatively mutating frontend views\nManipulating views manually increases the likelihood of errors\nManaging State Composition: a description of the UI built by Jetpack Compose when it executes composables.\nInitial composition: creation of a Composition by running composables the first time.\nRecomposition: re-running composables to update the Composition when data changes.\nA value computed by remember is stored in the Composition during initial composition, and the stored value is returned during recomposition.\nWhile remember helps you retain state across recompositions, the state is NOT retained across configuration changes.\nMutable objects that are not observable, such as ArrayList or a mutable data class, are not observable by Compose and don\u0026rsquo;t trigger a recomposition when they change.\nBefore reading another observable type in Compose, you must convert it to a State so that composables can automatically recompose when the state changes.\nNavigation in compose NavHost navController Navigation Graph ","permalink":"http://localhost:1313/posts/compose/","summary":"\u003ch2 id=\"thinking-in-compose\"\u003eThinking in Compose\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003edeclarative API that allows you to render your app UI without imperatively mutating frontend views\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManipulating views manually increases the likelihood of errors\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"managing-state\"\u003eManaging State\u003c/h2\u003e\n\u003cp\u003eComposition: a description of the UI built by Jetpack Compose when it executes composables.\u003c/p\u003e\n\u003cp\u003eInitial composition: creation of a Composition by running composables the first time.\u003c/p\u003e\n\u003cp\u003eRecomposition: re-running composables to update the Composition when data changes.\u003c/p\u003e\n\u003cp\u003eA value computed by \u003cstrong\u003eremember\u003c/strong\u003e is stored in the Composition during initial composition, and the stored value is returned during recomposition.\u003c/p\u003e","title":"Compose"},{"content":"linux list all users cut -d: -f1 /etc/passwd switch to postgres user switching to postgres user as this user has some extended privileges may be in order to prevent random users changing properties\nsudo -i -u postgres launch psql Now in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\npostgres@user-B760M:~$ psql List all DB \\l Connect to DB # switch to mydb \\c mydb # directly psql -d db_name # from an external url psql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb List Tables \\dt About Tables \\d table_name Get applications having connection with DB # why ? we can\u0026#39;t drop db if there is a connection SELECT application_name FROM pg_stat_activity WHERE datname =\u0026#39;db_name\u0026#39;; ","permalink":"http://localhost:1313/posts/postgres/","summary":"\u003ch3 id=\"linux-list-all-users\"\u003elinux list all users\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecut -d: -f1 /etc/passwd \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"switch-to-postgres-user\"\u003eswitch to \u003cstrong\u003epostgres\u003c/strong\u003e user\u003c/h3\u003e\n\u003cp\u003eswitching to postgres user as this user has some extended privileges\nmay be in order to prevent random users changing properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo -i -u postgres\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"launch-psql\"\u003elaunch psql\u003c/h3\u003e\n\u003cp\u003eNow in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epostgres@user-B760M:~$ psql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"list-all-db\"\u003eList all DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\l\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"connect-to-db\"\u003eConnect to DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# switch to mydb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\c\u003c/span\u003e mydb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# directly\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql -d db_name\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# from an external url \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"list-tables\"\u003eList Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003et\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"about-tables\"\u003eAbout Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003e table_name\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"get-applications-having-connection-with-db\"\u003eGet applications having connection with DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# why ? we can\u0026#39;t drop db if there is a connection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELECT application_name FROM pg_stat_activity WHERE datname \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;db_name\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Postgres"},{"content":"updateMilli concept TextClock widget\n","permalink":"http://localhost:1313/posts/appwidgets/","summary":"\u003cp\u003eupdateMilli concept\nTextClock widget\u003c/p\u003e","title":"AppWidgets"},{"content":"What they are for ? write asynchronous or blocking code in such a fashion that it looks similar to unblocking code\nSome other options Threads\nThread creation is expensive Threads\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of threads 3 thread { 4 Thread.sleep(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Coroutines\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of coroutines 3 launch { 4 delay(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Callback style code RxJava Kotlin DSL Domain specific language\nKotlin is a statically typed language (type of a variable is known at compile time)\nKotlin functions are first-class, which means they can be stored in variables and data structures, and can be passed as arguments to and returned from other higher-order functions\nFunction Types -\u0026gt; Kotlin uses this to represent functions\nFunction literals are functions that are not declared but are passed immediately as an expression\nLambda expressions and anonymous functions are function literals.\nreceiver type, which refers to the type being extended\nFunction types can optionally have an additional receiver type, which is specified before the dot in the notation: the type A.(B) -\u0026gt; C represents functions that can be called on a receiver object A with a parameter B and return a value C (also called as \u0026ldquo;function types with reciever\u0026rdquo;)\nInside the body of the function literal, the receiver object passed to a call becomes an implicit this, so that you can access the members of that receiver object without any additional qualifiers, or access the receiver object using a this expression.\nSuspend functions When they are suspended, they return a Continuation suspend functions can only be called from inside coroutines or another suspending function suspend functions have the power to suspend the coroutines suspend functions are actually state machines with suspension points as states Who will store these states ? Continuation\n1/** 2 * Interface representing a continuation after a suspension point that returns a value of type `T`. 3 */ 4@SinceKotlin(\u0026#34;1.3\u0026#34;) 5public interface Continuation\u0026lt;in T\u0026gt; { 6 /** 7 * The context of the coroutine that corresponds to this continuation. 8 */ 9 public val context: CoroutineContext 10 11 /** 12 * Resumes the execution of the corresponding coroutine passing a successful or failed [result] as the 13 * return value of the last suspension point. 14 */ 15 public fun resumeWith(result: Result\u0026lt;T\u0026gt;) 16} When function a calls function b, the virtual machine needs to store the state of a somewhere, as well as the address where execution should return once b is finished. All this is stored in a structure called call stack\nCoroutine context , CoroutineScope , Shared Mutable state Coroutine Builder coroutine builder, a bridge from the normal to the suspending world launch and async are extension functions on CoroutineScope.\nlaunch\nstart a coroutine, and it will run independently runBlocking\nrunBlocking is a very atypical builder. It blocks the thread it has been started on whenever its coroutine is suspended async\nsimilar to launch, but it is designed to produce a value Coroutine scope To create a scope out of a suspending function, we use the coroutineScope function. 1public interface CoroutineScope { 2 /** 3 * The context of this scope. 4 * Context is encapsulated by the scope and used for implementation of coroutine builders that are extensions on the scope. 5 * Accessing this property in general code is not recommended for any purposes except accessing the [Job] instance for advanced usages. 6 * 7 * By convention, should contain an instance of a [job][Job] to enforce structured concurrency. 8 */ 9 public val coroutineContext: CoroutineContext 10} Structured concurrency A parent provides a scope for its children, and they are called in this scope. This builds a relationship that is called a structured concurrency. Here are the most important effects of the parent-child relationship:\nchildren inherit context from their parent (but they can also overwrite it, as will be explained in the Coroutine context chapter); a parent suspends until all the children are finished (this will be explained in the Job and children awaiting chapter); when the parent is cancelled, its child coroutines are cancelled too (this will be explained in the Cancellation chapter); when a child raises an error, it destroys the parent as well (this will be explained in the Exception handling chapter). Coroutine Context 1public interface CoroutineContext { 2 /** 3 * Returns the element with the given [key] from this context or `null`. 4 */ 5 public operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? 6 7 /** 8 * Accumulates entries of this context starting with [initial] value and applying [operation] 9 * from left to right to current accumulator value and each element of this context. 10 */ 11 public fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R 12 13 /** 14 * Returns a context containing elements from this context and elements from other [context]. 15 * The elements from this context with the same key as in the other one are dropped. 16 */ 17 public operator fun plus(context: CoroutineContext): CoroutineContext = 18 if (context === EmptyCoroutineContext) this else // fast path -- avoid lambda creation 19 context.fold(this) { acc, element -\u0026gt; 20 val removed = acc.minusKey(element.key) 21 if (removed === EmptyCoroutineContext) element else { 22 // make sure interceptor is always last in the context (and thus is fast to get when present) 23 val interceptor = removed[ContinuationInterceptor] 24 if (interceptor == null) CombinedContext(removed, element) else { 25 val left = removed.minusKey(ContinuationInterceptor) 26 if (left === EmptyCoroutineContext) CombinedContext(element, interceptor) else 27 CombinedContext(CombinedContext(left, element), interceptor) 28 } 29 } 30 } 31 32 /** 33 * Returns a context containing elements from this context, but without an element with 34 * the specified [key]. 35 */ 36 public fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext 37 38 /** 39 * Key for the elements of [CoroutineContext]. [E] is a type of element with this key. 40 */ 41 public interface Key\u0026lt;E : Element\u0026gt; 42 43 /** 44 * An element of the [CoroutineContext]. An element of the coroutine context is a singleton context by itself. 45 */ 46 public interface Element : CoroutineContext { 47 /** 48 * A key of this coroutine context element. 49 */ 50 public val key: Key\u0026lt;*\u0026gt; 51 52 public override operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? = 53 @Suppress(\u0026#34;UNCHECKED_CAST\u0026#34;) 54 if (this.key == key) this as E else null 55 56 public override fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R = 57 operation(initial, this) 58 59 public override fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext = 60 if (this.key == key) EmptyCoroutineContext else this 61 } 62} operations -\u0026gt;plus, minus\nJob context a job represents a cancellable thing with a lifecycle each coroutine has its own job provider structured concurrency points 2,3,4 To check the state in code, we use the properties isActive, isCompleted, and isCancelled. Job is a coroutine context, we can access it using coroutineContext[Job]. When a coroutine has its own (independent) job, it has nearly no relation to its parent. It only inherits other contexts, but other results of the parent-child relationship will not apply. This causes us to lose structured concurrency, which is a problematic situation that should be avoided join method \u0026gt; This is a suspending function that suspends until a concrete job reaches a final state (either Completed or Cancelled). 1public interface Job : CoroutineContext.Element { } Jobs states\nState isActive isCompleted isCancelled New (optional initial state) false false false Active (default initial state) true false false Completing (transient state) true false false Cancelling (transient state) false false true Cancelled (final state) false true true Completed (final state) false true false Cancellation cancellation is co-operative once a job is cancelled it cannot acts as a parent for any new coroutines ends the job at the first suspension point if job has children they are also cancelled Freeing up resources after cancellation\n1.\n1 2job.invokeOnCompletion { exception: Throwable? -\u0026gt; 3 println(\u0026#34;Finished\u0026#34;) 4 } 1finally { 2 println(\u0026#34;Finally\u0026#34;) 3 withContext(NonCancellable) { 4 delay(1000L) 5 println(\u0026#34;Cleanup done\u0026#34;) 6 } 7 } Q: How to do suspending tasks after cancellation ?\nIdeally after cancellation we can\u0026rsquo;t launch new coroutines\n1finally { 2 withContext(NonCancellable) { 3 println(\u0026#34;job: I\u0026#39;m running finally\u0026#34;) 4 delay(1000L) 5 println(\u0026#34;job: And I\u0026#39;ve just delayed for 1 sec because I\u0026#39;m non-cancellable\u0026#34;) 6 } 7 } Exception Handling Scope functions coroutineScope 1suspend fun getUserName() { 2 delay(1000) 3 println(\u0026#34;User: suyash\u0026#34;) 4} 5 6suspend fun getUserData() { 7 delay(1000) 8 println(\u0026#34;location, hobbies\u0026#34;) 9} 10 11 12suspend fun main() = coroutineScope { 13 printTime(\u0026#34;begin\u0026#34;) 14 val userName = async { getUserName() } 15 val userData = async { getUserData() } 16 printTime(\u0026#34;end ${userName.await()} ${userData.await()}\u0026#34;) 17 18} Dispatchers Main - the default one\nIO - when we block threads with I/O operations limit- 64 by default\nDefault - limit of 20 for mine\nlimitedParallelism used on Dispatchers.Default makes a dispatcher with an additional limit. Using limitedParallelism on Dispatcher.IO makes a dispatcher independent of Dispatcher.IO. However, they all share the same infinite pool of threads. Q: Dispatcher limited to a single thread ? Solves the shared state problems\nShared state problems Constructing a coroutine scope Channel why ? Share Information b/w coroutines\nChannel supports any number of senders and receivers, and every value that is sent to a channel is received only once.\nHot data streams are eager, produce elements independently of their consumption, and store the elements. Cold data streams are lazy, perform their operations on-demand, and store nothing.\nFlow References [1]\n","permalink":"http://localhost:1313/posts/coroutines/","summary":"\u003ch3 id=\"what-they-are-for-\"\u003eWhat they are for ?\u003c/h3\u003e\n\u003cp\u003ewrite asynchronous or blocking code in such a fashion that it looks similar to unblocking code\u003c/p\u003e\n\u003ch3 id=\"some-other-options\"\u003eSome other options\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThreads\u003cbr\u003e\nThread creation is expensive\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThreads\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() = runBlocking {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    repeat(\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e_000) { \u003cspan style=\"color:#75715e\"\u003e// launch a lot of threads\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        thread {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eThread\u003c/span\u003e.sleep(\u003cspan style=\"color:#ae81ff\"\u003e5000L\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            println(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCoroutines\u003c/p\u003e","title":"Coroutines"},{"content":"How ViewModels are retained on Config Changes?\nBasic Terms ViewModelProvider ViewModelStore storage for viewmodel\nViewModelStoreOwner interface which contains storage object and is implemented by ComponentActivity etc.\nAttaching ViewModel to activity MainActivity.kt\n1class MainActivity : AppCompatActivity() { 2 @RequiresApi(Build.VERSION_CODES.P) 3 private lateinit var viewModel: MyViewModel; 4 5 @RequiresApi(Build.VERSION_CODES.P) 6 override fun onCreate(savedInstanceState: Bundle?) { 7 super.onCreate(savedInstanceState) 8 enableEdgeToEdge() 9 setContentView(R.layout.activity_main) 10 11 viewModel = ViewModelProvider(this)[MyViewModel::class.java] 12 13 } 14}![alt text](image.png) Q: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\nNo\nLet me walk you through code See how ViewModelStore is returned on from NonConfigurationInstance if not we create a new instance\n","permalink":"http://localhost:1313/posts/viewmodel/","summary":"\u003cp\u003eHow ViewModels are retained on Config Changes?\u003c/p\u003e\n\u003ch3 id=\"basic-terms\"\u003eBasic Terms\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelProvider\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStore\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003estorage for viewmodel\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-2.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStoreOwner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003einterface which contains storage object and is implemented by ComponentActivity etc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-5.png\"\u003e\n\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-6.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"attaching-viewmodel-to-activity\"\u003eAttaching ViewModel to activity\u003c/h3\u003e\n\u003cp\u003eMainActivity.kt\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainActivity\u003c/span\u003e : AppCompatActivity() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elateinit\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e viewModel: MyViewModel;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonCreate\u003c/span\u003e(savedInstanceState: Bundle?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e.onCreate(savedInstanceState)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        enableEdgeToEdge()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        setContentView(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.layout.activity_main)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        viewModel = ViewModelProvider(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)[MyViewModel\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e.java]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e}![alt text](image.png)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eQ: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\u003c/strong\u003e\u003cbr\u003e\nNo\u003c/p\u003e","title":"Viewmodel"},{"content":"Q: What is a NAS ?\nNetwork Atttached Storage\nQ: Network means ?\ncan be the whole Internet or your home network\nDIY Approach 1 Connecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\nCons Very low speed USB 2.0 has max speed of 480mbps limited storage no RAID(Redundant array of Inexpensive/Independent disks) DIY Approach 2 Raspberry PI with a HDD\nDIY Approach 3 OS choice\nTrueNAS ProxMox Ubuntu Server + casaos ","permalink":"http://localhost:1313/posts/nas/","summary":"\u003cp\u003e\u003cstrong\u003eQ: What is a NAS ?\u003c/strong\u003e\u003cbr\u003e\nNetwork Atttached Storage\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eQ: Network means ?\u003c/strong\u003e\u003cbr\u003e\ncan be the whole Internet or your home network\u003c/p\u003e\n\u003ch2 id=\"diy-approach-1\"\u003eDIY Approach 1\u003c/h2\u003e\n\u003cp\u003eConnecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCons\n\u003cul\u003e\n\u003cli\u003eVery low speed USB 2.0 has max speed of 480mbps\u003c/li\u003e\n\u003cli\u003elimited storage\u003c/li\u003e\n\u003cli\u003eno RAID(Redundant array of Inexpensive/Independent disks)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"diy-approach-2\"\u003eDIY Approach 2\u003c/h2\u003e\n\u003cp\u003eRaspberry PI  with a HDD\u003c/p\u003e\n\u003ch2 id=\"diy-approach-3\"\u003eDIY Approach 3\u003c/h2\u003e\n\u003cp\u003eOS choice\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTrueNAS\u003c/li\u003e\n\u003cli\u003eProxMox\u003c/li\u003e\n\u003cli\u003eUbuntu Server + casaos\u003c/li\u003e\n\u003c/ul\u003e","title":"DIY NAS or Home Server"},{"content":"Main App\nDefine Reciever 1class MyReciever : BroadcastReceiver() { 2 override fun onReceive(context: Context?, intent: Intent?) { 3 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Broadcast recieved\u0026#34;); 4 intent?.let { 5 val data = it.getIntExtra(\u0026#34;myVal\u0026#34;, 0) 6 val data2 = it.getStringExtra(\u0026#34;asdf\u0026#34;) 7 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;extraData = $data $data2 ${it.extras}\u0026#34;); 8 } 9 } 10} Register Reciever 1// Register 2ContextCompat.registerReceiver( 3 this, 4 myReciever, 5 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 6 ContextCompat.RECEIVER_EXPORTED 7) Unregister Reciever 1// Unregister 2this.unregisterReceiver(myReciever); In a secondary App\nFire Intent 1val button = findViewById\u0026lt;Button\u0026gt;(R.id.broadcast_button) 2button.setOnClickListener { 3 val intentToBeFired = Intent(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;) 4 val str: String = \u0026#34;MeaningFull Data\u0026#34; 5 intentToBeFired.putExtra(\u0026#34;your_string\u0026#34;, str) 6 intentToBeFired.putExtra(\u0026#34;your_int\u0026#34;,7); 7 sendBroadcast(intentToBeFired) 8} Discussion Points Q: How to protect any other app to handle a broadcast that my App has sent ?\nSend Broadcast with permission , any other app which wanted to recieve should also have that permission declared in manifest\nMain App\n1// Define permission and use it 2\u0026lt;permission 3 android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 4\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 5 6// Register reciever using permission 7registerReceiver( 8 myReciever, 9 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 10 \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;, 11 null, 12 RECEIVER_EXPORTED 13 ) secondary App\n1// Declare permission to be used 2\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 3 4// send Broadcast with that permission 5sendBroadcast(intentToBeFired, \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;) ","permalink":"http://localhost:1313/posts/broadcasting/","summary":"\u003cp\u003eMain App\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefine Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyReciever\u003c/span\u003e : BroadcastReceiver() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonReceive\u003c/span\u003e(context: Context?, intent: Intent?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Broadcast recieved\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e        intent\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getIntExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;myVal\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data2 = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getStringExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;asdf\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;extraData = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data2\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${it.extras}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eRegister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Register\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.registerReceiver(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    myReciever,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    IntentFilter(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.RECEIVER_EXPORTED\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUnregister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Unregister\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.unregisterReceiver(myReciever);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cp\u003eIn a secondary App\u003c/p\u003e","title":"BroadCasting"},{"content":"Why or UseCases? For your application you need to connect to a download service which is responsible for downloading the files and on complete inform you about the completion\nSteps Setting up AIDL Interfaces for IPC Setting Up service Implement Binder by implementing registerCallback and unregister callback Use RemoteCallbackList to maintain a list of - connections to our service sending Important updates to client by invoking callback Setting Up Client Important Permission for Accessing Service Setting up callback and define actions to perform setting up connection object and registering callback Setting Up AIDL Folder with files 1interface IMyAidlInterface { 2 int getPid(); 3 void registerCallback(IRemoteServiceCallback cb); 4 void unregisterCallback(IRemoteServiceCallback cb); 5} 6 7interface IRemoteServiceCallback { 8 void valueChanged(int newValue); 9} App Manifest (Service) 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Main Service 1class MyService : Service() { 2 3 val callbackList = RemoteCallbackList\u0026lt;IRemoteServiceCallback\u0026gt;() 4 // RemoteCallbackList maintains a list of active connections to clients 5 6 override fun onCreate() { 7 super.onCreate() 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Creating Service\u0026#34;) 9 } 10 11 private fun updateObservers() { 12 val n = callbackList.beginBroadcast() 13 for (i in 0 until n) { 14 try { 15 callbackList.getBroadcastItem(i).valueChanged(i); 16 } catch (e: RemoteException) { 17 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Remote exception occurs on sending messages\u0026#34;) 18 } 19 } 20 } 21 22 override fun onBind(intent: Intent?): IBinder? { 23 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Binding ... \u0026#34;); 24 return binder 25 } 26 27 override fun onUnbind(intent: Intent?): Boolean { 28 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;UnBinding ... \u0026#34;); 29 return super.onUnbind(intent) 30 } 31 32 override fun onDestroy() { 33 super.onDestroy() 34 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;onDestroy... \u0026#34;); 35 updateObservers() 36 callbackList.kill() 37 } 38 39 private val binder = object : IMyAidlInterface.Stub() { 40 override fun getPid(): Int { 41 updateObservers() 42 return Process.myPid() 43 } 44 45 override fun registerCallback(cb: IRemoteServiceCallback) { 46 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;registering Callback\u0026#34;) 47 callbackList.register(cb) 48 } 49 50 override fun unregisterCallback(cb: IRemoteServiceCallback?) { 51 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;unregister Callback\u0026#34;) 52 callbackList.unregister(cb) 53 } 54 } 55 56} App Manifest (Client) 1\u0026lt;queries\u0026gt; 2 \u0026lt;package android:name=\u0026#34;com.example.contexttheme\u0026#34; /\u0026gt; 3\u0026lt;/queries\u0026gt; In order to explicitly fire an intent when binding Connecting to Service (Client) 1val intent = Intent(action) 2intent.setPackage(\u0026#34;com.example.contexttheme\u0026#34;); 3this.bindService(intent, mConnection, Context.BIND_AUTO_CREATE) Connection Object (Client) 1 val action = \u0026#34;com.example.contexttheme.service\u0026#34;; 2 private val mConnection = object : ServiceConnection { 3 4 // Called when the connection with the service is established. 5 override fun onServiceConnected(className: ComponentName, service: IBinder) { 6 myservice = IMyAidlInterface.Stub.asInterface(service) 7 myservice?.registerCallback(mCallback) 8 bound = true 9 } 10 11 // Called when the connection with the service disconnects unexpectedly. 12 override fun onServiceDisconnected(className: ComponentName) { 13 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Service has unexpectedly disconnected\u0026#34;) 14 myservice = null 15 bound = false 16 } 17 } 18 19 Callback (Client) 1private val mCallback: IRemoteServiceCallback = object : IRemoteServiceCallback.Stub() { 2 override fun valueChanged(newValue: Int) { 3 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;value has been changed\u0026#34;) 4 } 5} ","permalink":"http://localhost:1313/posts/bound-service-aidl/","summary":"\u003ch4 id=\"why-or-usecases\"\u003eWhy or UseCases?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFor your application you need to connect to a download service which is responsible\nfor downloading the files and on complete inform you about the completion\u003c/p\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003eSteps\u003c/summary\u003e\n  \u003cul\u003e\n\u003cli\u003e\u003ca href=\"#setting-up-AIDL-folder-with-files\"\u003e\u003cstrong\u003eSetting up AIDL Interfaces for IPC\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up service\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#main-service\"\u003eImplement Binder by implementing registerCallback and unregister callback\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eUse RemoteCallbackList to maintain a list of - connections to our service\u003c/li\u003e\n\u003cli\u003esending Important updates to client by invoking callback\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up Client\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#app-manifest-client\"\u003eImportant Permission for Accessing Service\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#callback-client\"\u003eSetting up callback and define actions to perform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#connection-object-client\"\u003esetting up connection object and registering callback\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\n\u003ch4 id=\"setting-up-aidl-folder-with-files\"\u003eSetting Up AIDL Folder with files\u003c/h4\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/image.png\"\u003e\u003c/p\u003e","title":"Bound Service AIDL"},{"content":"Why ? Assume having an App with some functions that can be customized by the user The App already has some, but users want more :| This is a very very basic example on how that can be done\nIdea 1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN ) 2. Use PackageManager to get the Apps with custom action 3. Finally Using ClassLoaders to get classess and invoking methods on them to get results Getting Plugins with required action 1val pm = this.packageManager 2val list = pm.queryIntentServices(Intent(\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;), 0) 3val textViewIds = arrayOf(R.id.plugin_text1, R.id.plugin_text2) 4Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;size = ${list.size}\u0026#34;); 5 6for (i in list.indices) { 7 try { 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;li serviceInfo = \u0026#34; + list[i].serviceInfo.name); 9 val appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, 0) 10 val apkPath = appInfo.sourceDir 11 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;path = ${apkPath}\u0026#34;) 12 val dir = getDir(\u0026#34;dex_opt\u0026#34;, Context.MODE_PRIVATE) 13 val classLoader = PathClassLoader(apkPath, javaClass.classLoader) 14 15 val pluginClass = 16 classLoader.loadClass(\u0026#34;com.example.plugin${i}.PluginTextProvider\u0026#34;) 17 val pluginInstance = pluginClass.newInstance() 18 19 val textMethod = pluginClass.getMethod(\u0026#34;getText\u0026#34;) 20 val text: String = textMethod.invoke(pluginInstance).toString() 21 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;text for = ${text}\u0026#34;) 22 val textView: TextView = findViewById(textViewIds[i]) 23 textView.text = text 24 } catch (e: Exception) { 25 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Print exception ${e.message}\u0026#34;) 26 e.printStackTrace() 27 } 28} Main App Manifest 1\u0026lt;queries\u0026gt; 2 \u0026lt;intent\u0026gt; 3 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34; /\u0026gt; 4 \u0026lt;/intent\u0026gt; 5\u0026lt;/queries\u0026gt; Plugin App Manifest 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Custom classes implemented in Plugin APKs 1// Plugin2 Apk 2class PluginTextProvider { 3 public fun getText() = \u0026#34;Hello from plugin2\u0026#34; 4} 5 6// Plugin1 Apk 7class PluginTextProvider { 8 public fun getText() = \u0026#34;Hello from plugin1\u0026#34; 9} ","permalink":"http://localhost:1313/posts/plugin-example/","summary":"\u003ch4 id=\"why-\"\u003eWhy ?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAssume having an App with some functions that can be customized by the user\nThe App already has some, but users want \u003cstrong\u003emore\u003c/strong\u003e :|\nThis is a very very basic example on how that can be done\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"idea\"\u003eIdea\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN )\n2. Use PackageManager to get the Apps with custom action\n3. Finally Using ClassLoaders to get classess and invoking methods on them to get results\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"getting-plugins-with-required-action\"\u003eGetting Plugins with required action\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pm = \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.packageManager\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e list = pm.queryIntentServices(Intent(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textViewIds = arrayOf(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text1, \u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;size = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${list.size}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (i \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e list.indices) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;li serviceInfo = \u0026#34;\u003c/span\u003e + list[i].serviceInfo.name);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e apkPath = appInfo.sourceDir\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;path  = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${apkPath}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e dir = getDir(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;dex_opt\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eContext\u003c/span\u003e.MODE_PRIVATE)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e classLoader = PathClassLoader(apkPath, javaClass.classLoader)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e15\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginClass =\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e16\u003c/span\u003e\u003cspan\u003e            classLoader.loadClass(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.plugin\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${i}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e.PluginTextProvider\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e17\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginInstance = pluginClass.newInstance()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e18\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e19\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textMethod = pluginClass.getMethod(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;getText\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e20\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e text: String = textMethod.invoke(pluginInstance).toString()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e21\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;text for = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${text}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e22\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textView: TextView = findViewById(textViewIds[i])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e23\u003c/span\u003e\u003cspan\u003e        textView.text = text\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e24\u003c/span\u003e\u003cspan\u003e    } \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (e: Exception) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e25\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Print exception  \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${e.message}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e26\u003c/span\u003e\u003cspan\u003e        e.printStackTrace()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e27\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e28\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"main-app-manifest\"\u003eMain App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u0026lt;intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e        \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u0026lt;/intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\u0026lt;/queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"plugin-app-manifest\"\u003ePlugin App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.MyService\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    android:exported=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e        \u0026lt;intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e\u0026gt;\u0026lt;/action\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        \u0026lt;/intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u0026lt;/service\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"custom-classes-implemented-in-plugin-apks\"\u003eCustom classes implemented in Plugin APKs\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin2 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin1 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Android Plugin App Example"},{"content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH3 unordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 sub-item-5 sub-item-6 ordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 Header4 Table Header-1 Table Header-2 Table Header-3 Table Data-1 Table Data-2 Table Data-3 TD-4 Td-5 TD-6 Table Data-7 Table Data-8 Table Data-9 Header5 You may also want some images right in here like - you can do that but I would recommend you to use the component \u0026ldquo;image\u0026rdquo; and simply split your text.\nHeader6 Let us do some links - this for example: https://github.com/MinhasKamal/github-markdown-syntax is NOT a link but this: is GitHub\n","permalink":"http://localhost:1313/posts/loremipsum/","summary":"\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat. \u003cem\u003e\u003cstrong\u003eDuis aute irure dolor\u003c/strong\u003e\u003c/em\u003e in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. \u003cdel\u003eExcepteur sint occaecat\u003c/del\u003e cupidatat non\nproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\u003c/p\u003e\n\u003ch2 id=\"h2\"\u003eH2\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat.\u003c/p\u003e","title":"LoremIpsum"},{"content":"This is my personal website. I use this to document my learnings and same time sharing this with others.\n🖥️ PC Configuration - Processor: Intel i5 13500 - RAM: 16GB DDR4 - Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD - GPU: Intel® UHD Graphics 770 - Case: Lian Li Lancool 205M - OS: Windows 11 Pro / Ubuntu 22.04.5 LTS ","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eThis is my personal website.\nI use this to document my learnings and same time sharing this with others.\u003c/p\u003e\n\u003ch3 id=\"-pc-configuration\"\u003e🖥️ PC Configuration\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- Processor: Intel i5 13500  \n- RAM: 16GB DDR4  \n- Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD  \n- GPU:  Intel® UHD Graphics 770  \n- Case: Lian Li Lancool 205M  \n- OS: Windows 11 Pro / Ubuntu 22.04.5 LTS\n\u003c/code\u003e\u003c/pre\u003e","title":"About"},{"content":"Define a Custom component 1@CustomScope // Component specific scope 2@DefineComponent(parent = SingletonComponent::class) // component should be direct or indirect child of SingletonComponent 3interface CustomComponent { 4 5 @DefineComponent.Builder 6 interface Builder { 7 fun build(): CustomComponent 8 } 9} Build Custom Component 1class CustomComponentManager @Inject constructor( 2 private val customComponentProvider: Provider\u0026lt;CustomComponent.Builder\u0026gt; 3){ 4 var customComponent = customComponentProvider.get().build() 5 6} ","permalink":"http://localhost:1313/posts/firstpost/","summary":"\u003ch4 id=\"define--a--custom-component\"\u003eDefine  a  Custom component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@CustomScope\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e// Component specific scope\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e(parent = SingletonComponent\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e) \u003cspan style=\"color:#75715e\"\u003e// component should be direct or indirect child of SingletonComponent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e.Builder\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBuilder\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebuild\u003c/span\u003e(): CustomComponent\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"build-custom-component\"\u003eBuild Custom Component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponentManager\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e@Inject\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003econstructor\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e customComponentProvider: Provider\u0026lt;\u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e.Builder\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e customComponent = customComponentProvider.\u003cspan style=\"color:#66d9ef\"\u003eget\u003c/span\u003e().build()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Hilt Snippets"},{"content":"Technical The Accidental CTO by Subhash Choudhary Competitive Programming Book by Antti Laaksonen Head First Design Pattern by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra Kotlin Coroutines by Marcin Moskala Non Technical Atomic Habits by James Clear ","permalink":"http://localhost:1313/bookshelf/","summary":"\u003ch2 id=\"technical\"\u003eTechnical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/subhashchy/The-Accidental-CTO\"\u003e\u003cstrong\u003eThe Accidental CTO\u003c/strong\u003e\u003c/a\u003e by Subhash Choudhary\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cses.fi/book/book.pdf\"\u003e\u003cstrong\u003eCompetitive Programming Book\u003c/strong\u003e\u003c/a\u003e by Antti Laaksonen\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHead First Design Pattern\u003c/strong\u003e by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKotlin Coroutines\u003c/strong\u003e by Marcin Moskala\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"non-technical\"\u003eNon Technical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAtomic Habits\u003c/strong\u003e by James Clear\u003c/li\u003e\n\u003c/ul\u003e","title":"Bookshelf"},{"content":"","permalink":"http://localhost:1313/posts/kafka/","summary":"","title":"Kafka"},{"content":"\u0026ndash;\n","permalink":"http://localhost:1313/posts/annotations/","summary":"\u003cp\u003e\u0026ndash;\u003c/p\u003e","title":"Annotations"},{"content":"Thinking in Compose declarative API that allows you to render your app UI without imperatively mutating frontend views\nManipulating views manually increases the likelihood of errors\nManaging State Composition: a description of the UI built by Jetpack Compose when it executes composables.\nInitial composition: creation of a Composition by running composables the first time.\nRecomposition: re-running composables to update the Composition when data changes.\nA value computed by remember is stored in the Composition during initial composition, and the stored value is returned during recomposition.\nWhile remember helps you retain state across recompositions, the state is NOT retained across configuration changes.\nMutable objects that are not observable, such as ArrayList or a mutable data class, are not observable by Compose and don\u0026rsquo;t trigger a recomposition when they change.\nBefore reading another observable type in Compose, you must convert it to a State so that composables can automatically recompose when the state changes.\nNavigation in compose NavHost navController Navigation Graph ","permalink":"http://localhost:1313/posts/compose/","summary":"\u003ch2 id=\"thinking-in-compose\"\u003eThinking in Compose\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003edeclarative API that allows you to render your app UI without imperatively mutating frontend views\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManipulating views manually increases the likelihood of errors\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"managing-state\"\u003eManaging State\u003c/h2\u003e\n\u003cp\u003eComposition: a description of the UI built by Jetpack Compose when it executes composables.\u003c/p\u003e\n\u003cp\u003eInitial composition: creation of a Composition by running composables the first time.\u003c/p\u003e\n\u003cp\u003eRecomposition: re-running composables to update the Composition when data changes.\u003c/p\u003e\n\u003cp\u003eA value computed by \u003cstrong\u003eremember\u003c/strong\u003e is stored in the Composition during initial composition, and the stored value is returned during recomposition.\u003c/p\u003e","title":"Compose"},{"content":"linux list all users cut -d: -f1 /etc/passwd switch to postgres user switching to postgres user as this user has some extended privileges may be in order to prevent random users changing properties\nsudo -i -u postgres launch psql Now in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\npostgres@user-B760M:~$ psql List all DB \\l Connect to DB # switch to mydb \\c mydb # directly psql -d db_name # from an external url psql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb List Tables \\dt About Tables \\d table_name Get applications having connection with DB # why ? we can\u0026#39;t drop db if there is a connection SELECT application_name FROM pg_stat_activity WHERE datname =\u0026#39;db_name\u0026#39;; ","permalink":"http://localhost:1313/posts/postgres/","summary":"\u003ch3 id=\"linux-list-all-users\"\u003elinux list all users\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecut -d: -f1 /etc/passwd \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"switch-to-postgres-user\"\u003eswitch to \u003cstrong\u003epostgres\u003c/strong\u003e user\u003c/h3\u003e\n\u003cp\u003eswitching to postgres user as this user has some extended privileges\nmay be in order to prevent random users changing properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo -i -u postgres\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"launch-psql\"\u003elaunch psql\u003c/h3\u003e\n\u003cp\u003eNow in order to interact with PostgresSQL Database server we need to connect to CLI i.e psql\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epostgres@user-B760M:~$ psql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"list-all-db\"\u003eList all DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\l\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"connect-to-db\"\u003eConnect to DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# switch to mydb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\c\u003c/span\u003e mydb\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# directly\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql -d db_name\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# from an external url \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epsql postgresql://libmgmtdb_user:xOpWmuHy1eJItkYLAqaJCyPiq5etX0fz@ppg-d3ka8t7fte5s7387ssj0-a.oregon-postgres.render.com/libmgmtdb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"list-tables\"\u003eList Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003et\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"about-tables\"\u003eAbout Tables\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\d\u003c/span\u003e table_name\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"get-applications-having-connection-with-db\"\u003eGet applications having connection with DB\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# why ? we can\u0026#39;t drop db if there is a connection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSELECT application_name FROM pg_stat_activity WHERE datname \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;db_name\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Postgres"},{"content":"updateMilli concept TextClock widget\n","permalink":"http://localhost:1313/posts/appwidgets/","summary":"\u003cp\u003eupdateMilli concept\nTextClock widget\u003c/p\u003e","title":"AppWidgets"},{"content":"What they are for ? write asynchronous or blocking code in such a fashion that it looks similar to unblocking code\nSome other options Threads\nThread creation is expensive Threads\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of threads 3 thread { 4 Thread.sleep(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Coroutines\n1fun main() = runBlocking { 2 repeat(50_000) { // launch a lot of coroutines 3 launch { 4 delay(5000L) 5 println(\u0026#34;.\u0026#34;) 6 } 7 } 8} Callback style code RxJava Kotlin DSL Domain specific language\nKotlin is a statically typed language (type of a variable is known at compile time)\nKotlin functions are first-class, which means they can be stored in variables and data structures, and can be passed as arguments to and returned from other higher-order functions\nFunction Types -\u0026gt; Kotlin uses this to represent functions\nFunction literals are functions that are not declared but are passed immediately as an expression\nLambda expressions and anonymous functions are function literals.\nreceiver type, which refers to the type being extended\nFunction types can optionally have an additional receiver type, which is specified before the dot in the notation: the type A.(B) -\u0026gt; C represents functions that can be called on a receiver object A with a parameter B and return a value C (also called as \u0026ldquo;function types with reciever\u0026rdquo;)\nInside the body of the function literal, the receiver object passed to a call becomes an implicit this, so that you can access the members of that receiver object without any additional qualifiers, or access the receiver object using a this expression.\nSuspend functions When they are suspended, they return a Continuation suspend functions can only be called from inside coroutines or another suspending function suspend functions have the power to suspend the coroutines suspend functions are actually state machines with suspension points as states Who will store these states ? Continuation\n1/** 2 * Interface representing a continuation after a suspension point that returns a value of type `T`. 3 */ 4@SinceKotlin(\u0026#34;1.3\u0026#34;) 5public interface Continuation\u0026lt;in T\u0026gt; { 6 /** 7 * The context of the coroutine that corresponds to this continuation. 8 */ 9 public val context: CoroutineContext 10 11 /** 12 * Resumes the execution of the corresponding coroutine passing a successful or failed [result] as the 13 * return value of the last suspension point. 14 */ 15 public fun resumeWith(result: Result\u0026lt;T\u0026gt;) 16} When function a calls function b, the virtual machine needs to store the state of a somewhere, as well as the address where execution should return once b is finished. All this is stored in a structure called call stack\nCoroutine context , CoroutineScope , Shared Mutable state Coroutine Builder coroutine builder, a bridge from the normal to the suspending world launch and async are extension functions on CoroutineScope.\nlaunch\nstart a coroutine, and it will run independently runBlocking\nrunBlocking is a very atypical builder. It blocks the thread it has been started on whenever its coroutine is suspended async\nsimilar to launch, but it is designed to produce a value Coroutine scope To create a scope out of a suspending function, we use the coroutineScope function. 1public interface CoroutineScope { 2 /** 3 * The context of this scope. 4 * Context is encapsulated by the scope and used for implementation of coroutine builders that are extensions on the scope. 5 * Accessing this property in general code is not recommended for any purposes except accessing the [Job] instance for advanced usages. 6 * 7 * By convention, should contain an instance of a [job][Job] to enforce structured concurrency. 8 */ 9 public val coroutineContext: CoroutineContext 10} Structured concurrency A parent provides a scope for its children, and they are called in this scope. This builds a relationship that is called a structured concurrency. Here are the most important effects of the parent-child relationship:\nchildren inherit context from their parent (but they can also overwrite it, as will be explained in the Coroutine context chapter); a parent suspends until all the children are finished (this will be explained in the Job and children awaiting chapter); when the parent is cancelled, its child coroutines are cancelled too (this will be explained in the Cancellation chapter); when a child raises an error, it destroys the parent as well (this will be explained in the Exception handling chapter). Coroutine Context 1public interface CoroutineContext { 2 /** 3 * Returns the element with the given [key] from this context or `null`. 4 */ 5 public operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? 6 7 /** 8 * Accumulates entries of this context starting with [initial] value and applying [operation] 9 * from left to right to current accumulator value and each element of this context. 10 */ 11 public fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R 12 13 /** 14 * Returns a context containing elements from this context and elements from other [context]. 15 * The elements from this context with the same key as in the other one are dropped. 16 */ 17 public operator fun plus(context: CoroutineContext): CoroutineContext = 18 if (context === EmptyCoroutineContext) this else // fast path -- avoid lambda creation 19 context.fold(this) { acc, element -\u0026gt; 20 val removed = acc.minusKey(element.key) 21 if (removed === EmptyCoroutineContext) element else { 22 // make sure interceptor is always last in the context (and thus is fast to get when present) 23 val interceptor = removed[ContinuationInterceptor] 24 if (interceptor == null) CombinedContext(removed, element) else { 25 val left = removed.minusKey(ContinuationInterceptor) 26 if (left === EmptyCoroutineContext) CombinedContext(element, interceptor) else 27 CombinedContext(CombinedContext(left, element), interceptor) 28 } 29 } 30 } 31 32 /** 33 * Returns a context containing elements from this context, but without an element with 34 * the specified [key]. 35 */ 36 public fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext 37 38 /** 39 * Key for the elements of [CoroutineContext]. [E] is a type of element with this key. 40 */ 41 public interface Key\u0026lt;E : Element\u0026gt; 42 43 /** 44 * An element of the [CoroutineContext]. An element of the coroutine context is a singleton context by itself. 45 */ 46 public interface Element : CoroutineContext { 47 /** 48 * A key of this coroutine context element. 49 */ 50 public val key: Key\u0026lt;*\u0026gt; 51 52 public override operator fun \u0026lt;E : Element\u0026gt; get(key: Key\u0026lt;E\u0026gt;): E? = 53 @Suppress(\u0026#34;UNCHECKED_CAST\u0026#34;) 54 if (this.key == key) this as E else null 55 56 public override fun \u0026lt;R\u0026gt; fold(initial: R, operation: (R, Element) -\u0026gt; R): R = 57 operation(initial, this) 58 59 public override fun minusKey(key: Key\u0026lt;*\u0026gt;): CoroutineContext = 60 if (this.key == key) EmptyCoroutineContext else this 61 } 62} operations -\u0026gt;plus, minus\nJob context a job represents a cancellable thing with a lifecycle each coroutine has its own job provider structured concurrency points 2,3,4 To check the state in code, we use the properties isActive, isCompleted, and isCancelled. Job is a coroutine context, we can access it using coroutineContext[Job]. When a coroutine has its own (independent) job, it has nearly no relation to its parent. It only inherits other contexts, but other results of the parent-child relationship will not apply. This causes us to lose structured concurrency, which is a problematic situation that should be avoided join method \u0026gt; This is a suspending function that suspends until a concrete job reaches a final state (either Completed or Cancelled). 1public interface Job : CoroutineContext.Element { } Jobs states\nState isActive isCompleted isCancelled New (optional initial state) false false false Active (default initial state) true false false Completing (transient state) true false false Cancelling (transient state) false false true Cancelled (final state) false true true Completed (final state) false true false Cancellation cancellation is co-operative once a job is cancelled it cannot acts as a parent for any new coroutines ends the job at the first suspension point if job has children they are also cancelled Freeing up resources after cancellation\n1.\n1 2job.invokeOnCompletion { exception: Throwable? -\u0026gt; 3 println(\u0026#34;Finished\u0026#34;) 4 } 1finally { 2 println(\u0026#34;Finally\u0026#34;) 3 withContext(NonCancellable) { 4 delay(1000L) 5 println(\u0026#34;Cleanup done\u0026#34;) 6 } 7 } Q: How to do suspending tasks after cancellation ?\nIdeally after cancellation we can\u0026rsquo;t launch new coroutines\n1finally { 2 withContext(NonCancellable) { 3 println(\u0026#34;job: I\u0026#39;m running finally\u0026#34;) 4 delay(1000L) 5 println(\u0026#34;job: And I\u0026#39;ve just delayed for 1 sec because I\u0026#39;m non-cancellable\u0026#34;) 6 } 7 } Exception Handling Scope functions coroutineScope 1suspend fun getUserName() { 2 delay(1000) 3 println(\u0026#34;User: suyash\u0026#34;) 4} 5 6suspend fun getUserData() { 7 delay(1000) 8 println(\u0026#34;location, hobbies\u0026#34;) 9} 10 11 12suspend fun main() = coroutineScope { 13 printTime(\u0026#34;begin\u0026#34;) 14 val userName = async { getUserName() } 15 val userData = async { getUserData() } 16 printTime(\u0026#34;end ${userName.await()} ${userData.await()}\u0026#34;) 17 18} Dispatchers Main - the default one\nIO - when we block threads with I/O operations limit- 64 by default\nDefault - limit of 20 for mine\nlimitedParallelism used on Dispatchers.Default makes a dispatcher with an additional limit. Using limitedParallelism on Dispatcher.IO makes a dispatcher independent of Dispatcher.IO. However, they all share the same infinite pool of threads. Q: Dispatcher limited to a single thread ? Solves the shared state problems\nShared state problems Constructing a coroutine scope Channel why ? Share Information b/w coroutines\nChannel supports any number of senders and receivers, and every value that is sent to a channel is received only once.\nHot data streams are eager, produce elements independently of their consumption, and store the elements. Cold data streams are lazy, perform their operations on-demand, and store nothing.\nFlow References [1]\n","permalink":"http://localhost:1313/posts/coroutines/","summary":"\u003ch3 id=\"what-they-are-for-\"\u003eWhat they are for ?\u003c/h3\u003e\n\u003cp\u003ewrite asynchronous or blocking code in such a fashion that it looks similar to unblocking code\u003c/p\u003e\n\u003ch3 id=\"some-other-options\"\u003eSome other options\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThreads\u003cbr\u003e\nThread creation is expensive\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThreads\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() = runBlocking {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    repeat(\u003cspan style=\"color:#ae81ff\"\u003e50\u003c/span\u003e_000) { \u003cspan style=\"color:#75715e\"\u003e// launch a lot of threads\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        thread {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eThread\u003c/span\u003e.sleep(\u003cspan style=\"color:#ae81ff\"\u003e5000L\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            println(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCoroutines\u003c/p\u003e","title":"Coroutines"},{"content":"How ViewModels are retained on Config Changes?\nBasic Terms ViewModelProvider ViewModelStore storage for viewmodel\nViewModelStoreOwner interface which contains storage object and is implemented by ComponentActivity etc.\nAttaching ViewModel to activity MainActivity.kt\n1class MainActivity : AppCompatActivity() { 2 @RequiresApi(Build.VERSION_CODES.P) 3 private lateinit var viewModel: MyViewModel; 4 5 @RequiresApi(Build.VERSION_CODES.P) 6 override fun onCreate(savedInstanceState: Bundle?) { 7 super.onCreate(savedInstanceState) 8 enableEdgeToEdge() 9 setContentView(R.layout.activity_main) 10 11 viewModel = ViewModelProvider(this)[MyViewModel::class.java] 12 13 } 14}![alt text](image.png) Q: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\nNo\nLet me walk you through code See how ViewModelStore is returned on from NonConfigurationInstance if not we create a new instance\n","permalink":"http://localhost:1313/posts/viewmodel/","summary":"\u003cp\u003eHow ViewModels are retained on Config Changes?\u003c/p\u003e\n\u003ch3 id=\"basic-terms\"\u003eBasic Terms\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelProvider\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStore\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003estorage for viewmodel\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-2.png\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eViewModelStoreOwner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003einterface which contains storage object and is implemented by ComponentActivity etc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-5.png\"\u003e\n\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/viewModel-6.png\"\u003e\u003c/p\u003e\n\u003ch3 id=\"attaching-viewmodel-to-activity\"\u003eAttaching ViewModel to activity\u003c/h3\u003e\n\u003cp\u003eMainActivity.kt\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMainActivity\u003c/span\u003e : AppCompatActivity() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elateinit\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e viewModel: MyViewModel;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@RequiresApi\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eBuild\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eVERSION_CODES\u003c/span\u003e.P)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonCreate\u003c/span\u003e(savedInstanceState: Bundle?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003esuper\u003c/span\u003e.onCreate(savedInstanceState)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        enableEdgeToEdge()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        setContentView(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.layout.activity_main)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        viewModel = ViewModelProvider(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e)[MyViewModel\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e.java]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e}![alt text](image.png)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eQ: Aren\u0026rsquo;t we getting new viewmodel instance everytime as when configuration is changed onCreate is invoked again ?\u003c/strong\u003e\u003cbr\u003e\nNo\u003c/p\u003e","title":"Viewmodel"},{"content":"Q: What is a NAS ?\nNetwork Atttached Storage\nQ: Network means ?\ncan be the whole Internet or your home network\nDIY Approach 1 Connecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\nCons Very low speed USB 2.0 has max speed of 480mbps limited storage no RAID(Redundant array of Inexpensive/Independent disks) DIY Approach 2 Raspberry PI with a HDD\nDIY Approach 3 OS choice\nTrueNAS ProxMox Ubuntu Server + casaos ","permalink":"http://localhost:1313/posts/nas/","summary":"\u003cp\u003e\u003cstrong\u003eQ: What is a NAS ?\u003c/strong\u003e\u003cbr\u003e\nNetwork Atttached Storage\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eQ: Network means ?\u003c/strong\u003e\u003cbr\u003e\ncan be the whole Internet or your home network\u003c/p\u003e\n\u003ch2 id=\"diy-approach-1\"\u003eDIY Approach 1\u003c/h2\u003e\n\u003cp\u003eConnecting a SSD directly onto the home Wifi\u0026rsquo;s Usb\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCons\n\u003cul\u003e\n\u003cli\u003eVery low speed USB 2.0 has max speed of 480mbps\u003c/li\u003e\n\u003cli\u003elimited storage\u003c/li\u003e\n\u003cli\u003eno RAID(Redundant array of Inexpensive/Independent disks)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"diy-approach-2\"\u003eDIY Approach 2\u003c/h2\u003e\n\u003cp\u003eRaspberry PI  with a HDD\u003c/p\u003e\n\u003ch2 id=\"diy-approach-3\"\u003eDIY Approach 3\u003c/h2\u003e\n\u003cp\u003eOS choice\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTrueNAS\u003c/li\u003e\n\u003cli\u003eProxMox\u003c/li\u003e\n\u003cli\u003eUbuntu Server + casaos\u003c/li\u003e\n\u003c/ul\u003e","title":"DIY NAS or Home Server"},{"content":"Main App\nDefine Reciever 1class MyReciever : BroadcastReceiver() { 2 override fun onReceive(context: Context?, intent: Intent?) { 3 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Broadcast recieved\u0026#34;); 4 intent?.let { 5 val data = it.getIntExtra(\u0026#34;myVal\u0026#34;, 0) 6 val data2 = it.getStringExtra(\u0026#34;asdf\u0026#34;) 7 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;extraData = $data $data2 ${it.extras}\u0026#34;); 8 } 9 } 10} Register Reciever 1// Register 2ContextCompat.registerReceiver( 3 this, 4 myReciever, 5 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 6 ContextCompat.RECEIVER_EXPORTED 7) Unregister Reciever 1// Unregister 2this.unregisterReceiver(myReciever); In a secondary App\nFire Intent 1val button = findViewById\u0026lt;Button\u0026gt;(R.id.broadcast_button) 2button.setOnClickListener { 3 val intentToBeFired = Intent(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;) 4 val str: String = \u0026#34;MeaningFull Data\u0026#34; 5 intentToBeFired.putExtra(\u0026#34;your_string\u0026#34;, str) 6 intentToBeFired.putExtra(\u0026#34;your_int\u0026#34;,7); 7 sendBroadcast(intentToBeFired) 8} Discussion Points Q: How to protect any other app to handle a broadcast that my App has sent ?\nSend Broadcast with permission , any other app which wanted to recieve should also have that permission declared in manifest\nMain App\n1// Define permission and use it 2\u0026lt;permission 3 android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 4\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 5 6// Register reciever using permission 7registerReceiver( 8 myReciever, 9 IntentFilter(\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;), 10 \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;, 11 null, 12 RECEIVER_EXPORTED 13 ) secondary App\n1// Declare permission to be used 2\u0026lt;uses-permission android:name=\u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34; /\u0026gt; 3 4// send Broadcast with that permission 5sendBroadcast(intentToBeFired, \u0026#34;com.example.contexttheme.SECURE_BROADCAST_PERMISSION\u0026#34;) ","permalink":"http://localhost:1313/posts/broadcasting/","summary":"\u003cp\u003eMain App\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefine Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eMyReciever\u003c/span\u003e : BroadcastReceiver() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eoverride\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eonReceive\u003c/span\u003e(context: Context?, intent: Intent?) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Broadcast recieved\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e        intent\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003elet {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getIntExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;myVal\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e data2 = \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.getStringExtra(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;asdf\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;extraData = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$data2\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${it.extras}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eRegister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Register\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.registerReceiver(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    myReciever,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    IntentFilter(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.ACTION_UPDATE\u0026#34;\u003c/span\u003e),\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eContextCompat\u003c/span\u003e.RECEIVER_EXPORTED\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUnregister Reciever\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Unregister\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.unregisterReceiver(myReciever);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cp\u003eIn a secondary App\u003c/p\u003e","title":"BroadCasting"},{"content":"Why or UseCases? For your application you need to connect to a download service which is responsible for downloading the files and on complete inform you about the completion\nSteps Setting up AIDL Interfaces for IPC Setting Up service Implement Binder by implementing registerCallback and unregister callback Use RemoteCallbackList to maintain a list of - connections to our service sending Important updates to client by invoking callback Setting Up Client Important Permission for Accessing Service Setting up callback and define actions to perform setting up connection object and registering callback Setting Up AIDL Folder with files 1interface IMyAidlInterface { 2 int getPid(); 3 void registerCallback(IRemoteServiceCallback cb); 4 void unregisterCallback(IRemoteServiceCallback cb); 5} 6 7interface IRemoteServiceCallback { 8 void valueChanged(int newValue); 9} App Manifest (Service) 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Main Service 1class MyService : Service() { 2 3 val callbackList = RemoteCallbackList\u0026lt;IRemoteServiceCallback\u0026gt;() 4 // RemoteCallbackList maintains a list of active connections to clients 5 6 override fun onCreate() { 7 super.onCreate() 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Creating Service\u0026#34;) 9 } 10 11 private fun updateObservers() { 12 val n = callbackList.beginBroadcast() 13 for (i in 0 until n) { 14 try { 15 callbackList.getBroadcastItem(i).valueChanged(i); 16 } catch (e: RemoteException) { 17 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Remote exception occurs on sending messages\u0026#34;) 18 } 19 } 20 } 21 22 override fun onBind(intent: Intent?): IBinder? { 23 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;Binding ... \u0026#34;); 24 return binder 25 } 26 27 override fun onUnbind(intent: Intent?): Boolean { 28 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;UnBinding ... \u0026#34;); 29 return super.onUnbind(intent) 30 } 31 32 override fun onDestroy() { 33 super.onDestroy() 34 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;onDestroy... \u0026#34;); 35 updateObservers() 36 callbackList.kill() 37 } 38 39 private val binder = object : IMyAidlInterface.Stub() { 40 override fun getPid(): Int { 41 updateObservers() 42 return Process.myPid() 43 } 44 45 override fun registerCallback(cb: IRemoteServiceCallback) { 46 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;registering Callback\u0026#34;) 47 callbackList.register(cb) 48 } 49 50 override fun unregisterCallback(cb: IRemoteServiceCallback?) { 51 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;unregister Callback\u0026#34;) 52 callbackList.unregister(cb) 53 } 54 } 55 56} App Manifest (Client) 1\u0026lt;queries\u0026gt; 2 \u0026lt;package android:name=\u0026#34;com.example.contexttheme\u0026#34; /\u0026gt; 3\u0026lt;/queries\u0026gt; In order to explicitly fire an intent when binding Connecting to Service (Client) 1val intent = Intent(action) 2intent.setPackage(\u0026#34;com.example.contexttheme\u0026#34;); 3this.bindService(intent, mConnection, Context.BIND_AUTO_CREATE) Connection Object (Client) 1 val action = \u0026#34;com.example.contexttheme.service\u0026#34;; 2 private val mConnection = object : ServiceConnection { 3 4 // Called when the connection with the service is established. 5 override fun onServiceConnected(className: ComponentName, service: IBinder) { 6 myservice = IMyAidlInterface.Stub.asInterface(service) 7 myservice?.registerCallback(mCallback) 8 bound = true 9 } 10 11 // Called when the connection with the service disconnects unexpectedly. 12 override fun onServiceDisconnected(className: ComponentName) { 13 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Service has unexpectedly disconnected\u0026#34;) 14 myservice = null 15 bound = false 16 } 17 } 18 19 Callback (Client) 1private val mCallback: IRemoteServiceCallback = object : IRemoteServiceCallback.Stub() { 2 override fun valueChanged(newValue: Int) { 3 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;value has been changed\u0026#34;) 4 } 5} ","permalink":"http://localhost:1313/posts/bound-service-aidl/","summary":"\u003ch4 id=\"why-or-usecases\"\u003eWhy or UseCases?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFor your application you need to connect to a download service which is responsible\nfor downloading the files and on complete inform you about the completion\u003c/p\u003e\n\n\u003cdetails\u003e\n  \u003csummary\u003eSteps\u003c/summary\u003e\n  \u003cul\u003e\n\u003cli\u003e\u003ca href=\"#setting-up-AIDL-folder-with-files\"\u003e\u003cstrong\u003eSetting up AIDL Interfaces for IPC\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up service\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#main-service\"\u003eImplement Binder by implementing registerCallback and unregister callback\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eUse RemoteCallbackList to maintain a list of - connections to our service\u003c/li\u003e\n\u003cli\u003esending Important updates to client by invoking callback\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSetting Up Client\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#app-manifest-client\"\u003eImportant Permission for Accessing Service\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#callback-client\"\u003eSetting up callback and define actions to perform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#connection-object-client\"\u003esetting up connection object and registering callback\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\n\u003ch4 id=\"setting-up-aidl-folder-with-files\"\u003eSetting Up AIDL Folder with files\u003c/h4\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/images/image.png\"\u003e\u003c/p\u003e","title":"Bound Service AIDL"},{"content":"Why ? Assume having an App with some functions that can be customized by the user The App already has some, but users want more :| This is a very very basic example on how that can be done\nIdea 1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN ) 2. Use PackageManager to get the Apps with custom action 3. Finally Using ClassLoaders to get classess and invoking methods on them to get results Getting Plugins with required action 1val pm = this.packageManager 2val list = pm.queryIntentServices(Intent(\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;), 0) 3val textViewIds = arrayOf(R.id.plugin_text1, R.id.plugin_text2) 4Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;size = ${list.size}\u0026#34;); 5 6for (i in list.indices) { 7 try { 8 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;li serviceInfo = \u0026#34; + list[i].serviceInfo.name); 9 val appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, 0) 10 val apkPath = appInfo.sourceDir 11 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;path = ${apkPath}\u0026#34;) 12 val dir = getDir(\u0026#34;dex_opt\u0026#34;, Context.MODE_PRIVATE) 13 val classLoader = PathClassLoader(apkPath, javaClass.classLoader) 14 15 val pluginClass = 16 classLoader.loadClass(\u0026#34;com.example.plugin${i}.PluginTextProvider\u0026#34;) 17 val pluginInstance = pluginClass.newInstance() 18 19 val textMethod = pluginClass.getMethod(\u0026#34;getText\u0026#34;) 20 val text: String = textMethod.invoke(pluginInstance).toString() 21 Log.i(\u0026#34;gggg\u0026#34;, \u0026#34;text for = ${text}\u0026#34;) 22 val textView: TextView = findViewById(textViewIds[i]) 23 textView.text = text 24 } catch (e: Exception) { 25 Log.e(\u0026#34;gggg\u0026#34;, \u0026#34;Print exception ${e.message}\u0026#34;) 26 e.printStackTrace() 27 } 28} Main App Manifest 1\u0026lt;queries\u0026gt; 2 \u0026lt;intent\u0026gt; 3 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34; /\u0026gt; 4 \u0026lt;/intent\u0026gt; 5\u0026lt;/queries\u0026gt; Plugin App Manifest 1\u0026lt;service 2 android:name=\u0026#34;.MyService\u0026#34; 3 android:exported=\u0026#34;true\u0026#34;\u0026gt; 4 \u0026lt;intent-filter\u0026gt; 5 \u0026lt;action android:name=\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u0026gt;\u0026lt;/action\u0026gt; 6 \u0026lt;/intent-filter\u0026gt; 7\u0026lt;/service\u0026gt; Custom classes implemented in Plugin APKs 1// Plugin2 Apk 2class PluginTextProvider { 3 public fun getText() = \u0026#34;Hello from plugin2\u0026#34; 4} 5 6// Plugin1 Apk 7class PluginTextProvider { 8 public fun getText() = \u0026#34;Hello from plugin1\u0026#34; 9} ","permalink":"http://localhost:1313/posts/plugin-example/","summary":"\u003ch4 id=\"why-\"\u003eWhy ?\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAssume having an App with some functions that can be customized by the user\nThe App already has some, but users want \u003cstrong\u003emore\u003c/strong\u003e :|\nThis is a very very basic example on how that can be done\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"idea\"\u003eIdea\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1. Plugin App (where the customizations lives) have a service with a custom action (ex - com.example.contexttheme.PLUGIN )\n2. Use PackageManager to get the Apps with custom action\n3. Finally Using ClassLoaders to get classess and invoking methods on them to get results\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"getting-plugins-with-required-action\"\u003eGetting Plugins with required action\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pm = \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.packageManager\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e list = pm.queryIntentServices(Intent(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e), \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textViewIds = arrayOf(\u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text1, \u003cspan style=\"color:#a6e22e\"\u003eR\u003c/span\u003e.id.plugin_text2)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;size = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${list.size}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (i \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e list.indices) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;li serviceInfo = \u0026#34;\u003c/span\u003e + list[i].serviceInfo.name);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e appInfo = pm.getApplicationInfo(list[i].serviceInfo.packageName, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e apkPath = appInfo.sourceDir\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;path  = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${apkPath}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e dir = getDir(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;dex_opt\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eContext\u003c/span\u003e.MODE_PRIVATE)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e13\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e classLoader = PathClassLoader(apkPath, javaClass.classLoader)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e14\u003c/span\u003e\u003cspan\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e15\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginClass =\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e16\u003c/span\u003e\u003cspan\u003e            classLoader.loadClass(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.plugin\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${i}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e.PluginTextProvider\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e17\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e pluginInstance = pluginClass.newInstance()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e18\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e19\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textMethod = pluginClass.getMethod(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;getText\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e20\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e text: String = textMethod.invoke(pluginInstance).toString()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e21\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.i(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;text for = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${text}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e22\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e textView: TextView = findViewById(textViewIds[i])\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e23\u003c/span\u003e\u003cspan\u003e        textView.text = text\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e24\u003c/span\u003e\u003cspan\u003e    } \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (e: Exception) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e25\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gggg\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Print exception  \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${e.message}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e26\u003c/span\u003e\u003cspan\u003e        e.printStackTrace()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e27\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e28\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"main-app-manifest\"\u003eMain App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u0026lt;intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e        \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u0026lt;/intent\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\u0026lt;/queries\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"plugin-app-manifest\"\u003ePlugin App Manifest\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u0026lt;service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.MyService\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    android:exported=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e        \u0026lt;intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e            \u0026lt;action android:name=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.contexttheme.PLUGIN\u0026#34;\u003c/span\u003e\u0026gt;\u0026lt;/action\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e        \u0026lt;/intent-filter\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u0026lt;/service\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"custom-classes-implemented-in-plugin-apks\"\u003eCustom classes implemented in Plugin APKs\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin2 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Plugin1 Apk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePluginTextProvider\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetText\u003c/span\u003e() = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello from plugin1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Android Plugin App Example"},{"content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nH3 unordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 sub-item-5 sub-item-6 ordered list:\nitem-1 sub-item-1 sub-item-2 item-2 sub-item-3 sub-item-4 item-3 Header4 Table Header-1 Table Header-2 Table Header-3 Table Data-1 Table Data-2 Table Data-3 TD-4 Td-5 TD-6 Table Data-7 Table Data-8 Table Data-9 Header5 You may also want some images right in here like - you can do that but I would recommend you to use the component \u0026ldquo;image\u0026rdquo; and simply split your text.\nHeader6 Let us do some links - this for example: https://github.com/MinhasKamal/github-markdown-syntax is NOT a link but this: is GitHub\n","permalink":"http://localhost:1313/posts/loremipsum/","summary":"\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat. \u003cem\u003e\u003cstrong\u003eDuis aute irure dolor\u003c/strong\u003e\u003c/em\u003e in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. \u003cdel\u003eExcepteur sint occaecat\u003c/del\u003e cupidatat non\nproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\u003c/p\u003e\n\u003ch2 id=\"h2\"\u003eH2\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, \u003cem\u003econsectetur\u003c/em\u003e adipisicing elit, sed do eiusmod\ntempor incididunt ut \u003cstrong\u003elabore et dolore magna aliqua\u003c/strong\u003e. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat.\u003c/p\u003e","title":"LoremIpsum"},{"content":"This is my personal website. I use this to document my learnings and same time sharing this with others.\n🖥️ PC Configuration - Processor: Intel i5 13500 - RAM: 16GB DDR4 - Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD - GPU: Intel® UHD Graphics 770 - Case: Lian Li Lancool 205M - OS: Windows 11 Pro / Ubuntu 22.04.5 LTS ","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eThis is my personal website.\nI use this to document my learnings and same time sharing this with others.\u003c/p\u003e\n\u003ch3 id=\"-pc-configuration\"\u003e🖥️ PC Configuration\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- Processor: Intel i5 13500  \n- RAM: 16GB DDR4  \n- Storage: 512GB NVMe SSD + 512GB SATA SSD + 320GB HDD  \n- GPU:  Intel® UHD Graphics 770  \n- Case: Lian Li Lancool 205M  \n- OS: Windows 11 Pro / Ubuntu 22.04.5 LTS\n\u003c/code\u003e\u003c/pre\u003e","title":"About"},{"content":"Define a Custom component 1@CustomScope // Component specific scope 2@DefineComponent(parent = SingletonComponent::class) // component should be direct or indirect child of SingletonComponent 3interface CustomComponent { 4 5 @DefineComponent.Builder 6 interface Builder { 7 fun build(): CustomComponent 8 } 9} Build Custom Component 1class CustomComponentManager @Inject constructor( 2 private val customComponentProvider: Provider\u0026lt;CustomComponent.Builder\u0026gt; 3){ 4 var customComponent = customComponentProvider.get().build() 5 6} ","permalink":"http://localhost:1313/posts/firstpost/","summary":"\u003ch4 id=\"define--a--custom-component\"\u003eDefine  a  Custom component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@CustomScope\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e// Component specific scope\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e(parent = SingletonComponent\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e) \u003cspan style=\"color:#75715e\"\u003e// component should be direct or indirect child of SingletonComponent\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@DefineComponent\u003c/span\u003e.Builder\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBuilder\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e7\u003c/span\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebuild\u003c/span\u003e(): CustomComponent\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e8\u003c/span\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e9\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003ch4 id=\"build-custom-component\"\u003eBuild Custom Component\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kt\" data-lang=\"kt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\u003c/span\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomComponentManager\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e@Inject\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003econstructor\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e customComponentProvider: Provider\u0026lt;\u003cspan style=\"color:#a6e22e\"\u003eCustomComponent\u003c/span\u003e.Builder\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\u003c/span\u003e\u003cspan\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\u003c/span\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e customComponent = customComponentProvider.\u003cspan style=\"color:#66d9ef\"\u003eget\u003c/span\u003e().build()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\u003c/span\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\u003c/span\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Hilt Snippets"},{"content":"Technical The Accidental CTO by Subhash Choudhary Competitive Programming Book by Antti Laaksonen Head First Design Pattern by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra Kotlin Coroutines by Marcin Moskala Non Technical Atomic Habits by James Clear ","permalink":"http://localhost:1313/bookshelf/","summary":"\u003ch2 id=\"technical\"\u003eTechnical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/subhashchy/The-Accidental-CTO\"\u003e\u003cstrong\u003eThe Accidental CTO\u003c/strong\u003e\u003c/a\u003e by Subhash Choudhary\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cses.fi/book/book.pdf\"\u003e\u003cstrong\u003eCompetitive Programming Book\u003c/strong\u003e\u003c/a\u003e by Antti Laaksonen\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHead First Design Pattern\u003c/strong\u003e by Eric Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKotlin Coroutines\u003c/strong\u003e by Marcin Moskala\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"non-technical\"\u003eNon Technical\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAtomic Habits\u003c/strong\u003e by James Clear\u003c/li\u003e\n\u003c/ul\u003e","title":"Bookshelf"}]